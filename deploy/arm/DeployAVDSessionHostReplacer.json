{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "16270594338810585591"
    }
  },
  "parameters": {
    "acceleratedNetworking": {
      "type": "bool"
    },
    "allowDownsizing": {
      "type": "bool",
      "defaultValue": true
    },
    "applicationInsightsName": {
      "type": "string"
    },
    "appServicePlanName": {
      "type": "string"
    },
    "availabilityZones": {
      "type": "array",
      "defaultValue": []
    },
    "azureBlobsPrivateDnsZoneResourceId": {
      "type": "string"
    },
    "azureFilesPrivateDnsZoneResourceId": {
      "type": "string"
    },
    "azureQueuesPrivateDnsZoneResourceId": {
      "type": "string"
    },
    "azureTablesPrivateDnsZoneResourceId": {
      "type": "string"
    },
    "delegatedSubnetResourceId": {
      "type": "string"
    },
    "domainJoinPassword": {
      "type": "securestring",
      "defaultValue": ""
    },
    "domainJoinUserName": {
      "type": "string",
      "defaultValue": ""
    },
    "domainName": {
      "type": "string",
      "defaultValue": ""
    },
    "drainGracePeriodHours": {
      "type": "int",
      "defaultValue": 24
    },
    "fixSessionHostTags": {
      "type": "bool",
      "defaultValue": true
    },
    "functionAppName": {
      "type": "string"
    },
    "functionAppNetworkInterfaceName": {
      "type": "string"
    },
    "functionAppPrivateDnsZoneResourceId": {
      "type": "string"
    },
    "functionAppPrivateEndpointName": {
      "type": "string"
    },
    "galleryImageId": {
      "type": "string",
      "defaultValue": ""
    },
    "hostPoolResourceId": {
      "type": "string"
    },
    "identityServiceProvider": {
      "type": "string"
    },
    "intuneEnrollment": {
      "type": "bool",
      "defaultValue": false
    },
    "keyVaultName": {
      "type": "string"
    },
    "organizationUnitPath": {
      "type": "string",
      "defaultValue": ""
    },
    "keyVaultNetworkInterfaceName": {
      "type": "string"
    },
    "keyVaultPrivateDnsZoneResourceId": {
      "type": "string"
    },
    "keyVaultPrivateEndpointName": {
      "type": "string"
    },
    "localAdminUsername": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "logAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "marketPlaceImageOffer": {
      "type": "string"
    },
    "marketPlaceImagePublisher": {
      "type": "string"
    },
    "marketPlaceImageSku": {
      "type": "string"
    },
    "privateLinkScopeResourceId": {
      "type": "string"
    },
    "replaceSessionHostOnNewImageVersion": {
      "type": "bool",
      "defaultValue": true
    },
    "replaceSessionHostOnNewImageVersionDelayDays": {
      "type": "int",
      "defaultValue": 0
    },
    "securityType": {
      "type": "string"
    },
    "sessionHostDiskType": {
      "type": "string",
      "defaultValue": "Premium_LRS"
    },
    "sessionHostInstanceNumberPadding": {
      "type": "int",
      "defaultValue": 2
    },
    "sessionHostNamePrefix": {
      "type": "string"
    },
    "sessionHostResourceGroupName": {
      "type": "string",
      "defaultValue": ""
    },
    "sessionHostSize": {
      "type": "string"
    },
    "sessionHostsRegion": {
      "type": "string"
    },
    "shrDeploymentPrefix": {
      "type": "string",
      "defaultValue": "AVDSessionHostReplacer"
    },
    "storageAccountDiagnosticSettingName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageAccountNetworkInterfaceName": {
      "type": "string"
    },
    "storageAccountPrivateEndpointName": {
      "type": "string"
    },
    "subnetResourceId": {
      "type": "string"
    },
    "tagDeployTimestamp": {
      "type": "string",
      "defaultValue": "AutoReplaceDeployTimestamp"
    },
    "tagIncludeInAutomation": {
      "type": "string",
      "defaultValue": "IncludeInAutoReplace"
    },
    "tagPendingDrainTimestamp": {
      "type": "string",
      "defaultValue": "AutoReplacePendingDrainTimestamp"
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    },
    "tagScalingPlanExclusionTag": {
      "type": "string",
      "defaultValue": "ScalingPlanExclusion"
    },
    "targetSessionHostCount": {
      "type": "int"
    },
    "targetVMAgeDays": {
      "type": "int",
      "defaultValue": 45
    },
    "templateSpecName": {
      "type": "string"
    },
    "timeStamp": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "userAssignedIdentityName": {
      "type": "string"
    },
    "vmNamesTemplateParameterName": {
      "type": "string",
      "defaultValue": "VMNames"
    }
  },
  "variables": {
    "imageReference": "[if(empty(parameters('galleryImageId')), createObject('publisher', parameters('marketPlaceImagePublisher'), 'offer', parameters('marketPlaceImageOffer'), 'sku', parameters('marketPlaceImageSku'), 'version', 'latest'), createObject('Id', parameters('galleryImageId')))]",
    "domainJoinObject": "[if(equals(parameters('identityServiceProvider'), 'EntraID'), createObject('DomainType', 'EntraID', 'IntuneJoin', parameters('intuneEnrollment')), createObject('DomainType', 'ActiveDirectory', 'DomainName', parameters('domainName'), 'DomainJoinUserName', parameters('domainJoinUserName'), 'ADOUPath', parameters('organizationUnitPath')))]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[parameters('userAssignedIdentityName')]",
      "location": "[parameters('location')]",
      "tags": "[if(contains(parameters('tags'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), parameters('tags')['Microsoft.ManagedIdentity/userAssignedIdentities'], createObject())]"
    },
    {
      "condition": "[not(equals(parameters('identityServiceProvider'), 'EntraID'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy-key-vault-{0}', parameters('timeStamp'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "domainJoinPassword": {
            "value": "[parameters('domainJoinPassword')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultNetworkInterfaceName": {
            "value": "[parameters('keyVaultNetworkInterfaceName')]"
          },
          "keyVaultPrivateDnsZoneResourceId": {
            "value": "[parameters('keyVaultPrivateDnsZoneResourceId')]"
          },
          "keyVaultPrivateEndpointName": {
            "value": "[parameters('keyVaultPrivateEndpointName')]"
          },
          "subnetResourceId": {
            "value": "[parameters('subnetResourceId')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "15088480330190824016"
            }
          },
          "parameters": {
            "domainJoinPassword": {
              "type": "securestring"
            },
            "keyVaultName": {
              "type": "string"
            },
            "keyVaultNetworkInterfaceName": {
              "type": "string"
            },
            "keyVaultPrivateEndpointName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "keyExpirationInDays": {
              "type": "int",
              "defaultValue": 30
            },
            "keyVaultPrivateDnsZoneResourceId": {
              "type": "string"
            },
            "subnetResourceId": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "tags": "[if(contains(parameters('tags'), 'Microsoft.KeyVault/vaults'), parameters('tags')['Microsoft.KeyVault/vaults'], createObject())]",
              "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enablePurgeProtection": true,
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny",
                  "ipRules": [],
                  "virtualNetworkRules": []
                },
                "publicNetworkAccess": "Disabled",
                "sku": {
                  "family": "A",
                  "name": "premium"
                },
                "softDeleteRetentionInDays": 90,
                "tenantId": "[subscription().tenantId]"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[parameters('keyVaultPrivateEndpointName')]",
              "location": "[parameters('location')]",
              "tags": "[if(contains(parameters('tags'), 'Microsoft.Network/privateEndpoints'), parameters('tags')['Microsoft.Network/privateEndpoints'], createObject())]",
              "properties": {
                "customNetworkInterfaceName": "[parameters('keyVaultNetworkInterfaceName')]",
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('keyVaultPrivateEndpointName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                      "groupIds": [
                        "vault"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetResourceId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('keyVaultPrivateEndpointName'), parameters('keyVaultName'))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateDnsZoneId": "[parameters('keyVaultPrivateDnsZoneResourceId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('keyVaultPrivateEndpointName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/keys",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'StorageEncryptionKey')]",
              "properties": {
                "attributes": {
                  "enabled": true
                },
                "keySize": 4096,
                "kty": "RSA",
                "rotationPolicy": {
                  "attributes": {
                    "expiryTime": "[format('P{0}D', string(parameters('keyExpirationInDays')))]"
                  },
                  "lifetimeActions": [
                    {
                      "action": {
                        "type": "Notify"
                      },
                      "trigger": {
                        "timeBeforeExpiry": "P10D"
                      }
                    },
                    {
                      "action": {
                        "type": "Rotate"
                      },
                      "trigger": {
                        "timeAfterCreate": "[format('P{0}D', string(sub(parameters('keyExpirationInDays'), 7)))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'DomainJoinPassword')]",
              "properties": {
                "value": "[parameters('domainJoinPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ],
          "outputs": {
            "keyName": {
              "type": "string",
              "value": "StorageEncryptionKey"
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            },
            "uri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy-storage-account-{0}', parameters('timeStamp'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "azureBlobsPrivateDnsZoneResourceId": {
            "value": "[parameters('azureBlobsPrivateDnsZoneResourceId')]"
          },
          "azureFilesPrivateDnsZoneResourceId": {
            "value": "[parameters('azureFilesPrivateDnsZoneResourceId')]"
          },
          "azureQueuesPrivateDnsZoneResourceId": {
            "value": "[parameters('azureQueuesPrivateDnsZoneResourceId')]"
          },
          "azureTablesPrivateDnsZoneResourceId": {
            "value": "[parameters('azureTablesPrivateDnsZoneResourceId')]"
          },
          "functionAppName": {
            "value": "[parameters('functionAppName')]"
          },
          "keyName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('deploy-key-vault-{0}', parameters('timeStamp'))), '2022-09-01').outputs.keyName.value]"
          },
          "keyVaultUri": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('deploy-key-vault-{0}', parameters('timeStamp'))), '2022-09-01').outputs.uri.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceResourceId": {
            "value": "[parameters('logAnalyticsWorkspaceResourceId')]"
          },
          "storageAccountDiagnosticSettingName": {
            "value": "[parameters('storageAccountDiagnosticSettingName')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountNetworkInterfaceName": {
            "value": "[parameters('storageAccountNetworkInterfaceName')]"
          },
          "storageAccountPrivateEndpointName": {
            "value": "[parameters('storageAccountPrivateEndpointName')]"
          },
          "subnetResourceId": {
            "value": "[parameters('subnetResourceId')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "userAssignedIdentityResourceId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "13991356661166191108"
            }
          },
          "parameters": {
            "azureBlobsPrivateDnsZoneResourceId": {
              "type": "string"
            },
            "azureFilesPrivateDnsZoneResourceId": {
              "type": "string"
            },
            "azureQueuesPrivateDnsZoneResourceId": {
              "type": "string"
            },
            "azureTablesPrivateDnsZoneResourceId": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            },
            "keyName": {
              "type": "string"
            },
            "keyVaultUri": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "logAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "storageAccountDiagnosticSettingName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageAccountNetworkInterfaceName": {
              "type": "string"
            },
            "storageAccountPrivateEndpointName": {
              "type": "string"
            },
            "subnetResourceId": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "userAssignedIdentityResourceId": {
              "type": "string"
            }
          },
          "variables": {
            "storagePrivateDnsZoneResourceIds": [
              "[parameters('azureBlobsPrivateDnsZoneResourceId')]",
              "[parameters('azureFilesPrivateDnsZoneResourceId')]",
              "[parameters('azureQueuesPrivateDnsZoneResourceId')]",
              "[parameters('azureTablesPrivateDnsZoneResourceId')]"
            ],
            "storageSubResources": [
              "blob",
              "file",
              "queue",
              "table"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "tags": "[coalesce(tryGet(parameters('tags'), 'Microsoft.Storage/storageAccounts'), createObject())]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('userAssignedIdentityResourceId'))]": {}
                }
              },
              "properties": {
                "accessTier": "Hot",
                "allowBlobPublicAccess": false,
                "allowCrossTenantReplication": false,
                "allowedCopyScope": "PrivateLink",
                "allowSharedKeyAccess": true,
                "azureFilesIdentityBasedAuthentication": {
                  "directoryServiceOptions": "None"
                },
                "defaultToOAuthAuthentication": false,
                "dnsEndpointType": "Standard",
                "encryption": {
                  "identity": {
                    "userAssignedIdentity": "[parameters('userAssignedIdentityResourceId')]"
                  },
                  "requireInfrastructureEncryption": true,
                  "keyvaultproperties": {
                    "keyvaulturi": "[parameters('keyVaultUri')]",
                    "keyname": "[parameters('keyName')]"
                  },
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "table": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "queue": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.KeyVault"
                },
                "largeFileSharesState": "Disabled",
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Deny"
                },
                "publicNetworkAccess": "Disabled",
                "supportsHttpsTrafficOnly": true
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "protocolSettings": {
                  "smb": {
                    "versions": "SMB3.1.1;",
                    "authenticationMethods": "NTLMv2;",
                    "channelEncryption": "AES-128-GCM;AES-256-GCM;"
                  }
                },
                "shareDeleteRetentionPolicy": {
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', toLower(parameters('functionAppName')))]",
              "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "copy": {
                "name": "privateEndpoints",
                "count": "[length(variables('storageSubResources'))]"
              },
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}-{1}', parameters('storageAccountPrivateEndpointName'), variables('storageSubResources')[copyIndex()])]",
              "location": "[parameters('location')]",
              "tags": "[if(contains(parameters('tags'), 'Microsoft.Network/privateEndpoints'), parameters('tags')['Microsoft.Network/privateEndpoints'], createObject())]",
              "properties": {
                "customNetworkInterfaceName": "[format('{0}-{1}', parameters('storageAccountNetworkInterfaceName'), variables('storageSubResources')[copyIndex()])]",
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-{1}', parameters('storageAccountPrivateEndpointName'), variables('storageSubResources')[copyIndex()])]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                      "groupIds": [
                        "[variables('storageSubResources')[copyIndex()]]"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetResourceId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "copy": {
                "name": "privateDnsZoneGroups",
                "count": "[length(variables('storageSubResources'))]"
              },
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', format('{0}-{1}', parameters('storageAccountPrivateEndpointName'), variables('storageSubResources')[copyIndex()]), parameters('storageAccountName'))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateDnsZoneId": "[variables('storagePrivateDnsZoneResourceIds')[copyIndex()]]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-{1}', parameters('storageAccountPrivateEndpointName'), variables('storageSubResources')[copyIndex()]))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('logAnalyticsWorkspaceResourceId')))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2017-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}', parameters('storageAccountName'), 'default')]",
              "name": "[parameters('storageAccountDiagnosticSettingName')]",
              "properties": {
                "logs": [
                  {
                    "category": "StorageWrite",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceResourceId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('deploy-key-vault-{0}', parameters('timeStamp')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy-application-insights-{0}', parameters('timeStamp'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "privateLinkScopeResourceId": {
            "value": "[parameters('privateLinkScopeResourceId')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "timestamp": {
            "value": "[parameters('timeStamp')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "10004591363284451245"
            }
          },
          "parameters": {
            "applicationInsightsName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "privateLinkScopeResourceId": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "timestamp": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[if(contains(parameters('tags'), 'Microsoft.Insights/components'), parameters('tags')['Microsoft.Insights/components'], createObject())]",
              "properties": {
                "Application_Type": "web"
              },
              "kind": "web"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('deploy-private-link-scope-{0}', parameters('timestamp'))]",
              "subscriptionId": "[split(parameters('privateLinkScopeResourceId'), '/')[2]]",
              "resourceGroup": "[split(parameters('privateLinkScopeResourceId'), '/')[4]]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "applicationInsightsResourceId": {
                    "value": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
                  },
                  "privateLinkScopeResourceId": {
                    "value": "[parameters('privateLinkScopeResourceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "9527454008361250279"
                    }
                  },
                  "parameters": {
                    "applicationInsightsName": {
                      "type": "string"
                    },
                    "applicationInsightsResourceId": {
                      "type": "string"
                    },
                    "privateLinkScopeResourceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/privateLinkScopes/scopedResources",
                      "apiVersion": "2021-09-01",
                      "name": "[format('{0}/{1}', split(parameters('privateLinkScopeResourceId'), '/')[8], parameters('applicationInsightsName'))]",
                      "properties": {
                        "linkedResourceId": "[parameters('applicationInsightsResourceId')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy-function-app-{0}', parameters('timeStamp'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('appServicePlanName')]"
          },
          "delegatedSubnetResourceId": {
            "value": "[parameters('delegatedSubnetResourceId')]"
          },
          "functionAppName": {
            "value": "[parameters('functionAppName')]"
          },
          "functionAppNetworkInterfaceName": {
            "value": "[parameters('functionAppNetworkInterfaceName')]"
          },
          "functionAppPrivateDnsZoneResourceId": {
            "value": "[parameters('functionAppPrivateDnsZoneResourceId')]"
          },
          "functionAppPrivateEndpointName": {
            "value": "[parameters('functionAppPrivateEndpointName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "replacementPlanSettings": {
            "value": [
              {
                "name": "_HostPoolResourceGroupName",
                "value": "[split(parameters('hostPoolResourceId'), '/')[4]]"
              },
              {
                "name": "_HostPoolName",
                "value": "[split(parameters('hostPoolResourceId'), '/')[8]]"
              },
              {
                "name": "_TargetSessionHostCount",
                "value": "[parameters('targetSessionHostCount')]"
              },
              {
                "name": "_SessionHostNamePrefix",
                "value": "[parameters('sessionHostNamePrefix')]"
              },
              {
                "name": "_SessionHostTemplate",
                "value": "[reference(resourceId('Microsoft.Resources/deployments', format('deploy-template-spec-{0}', parameters('timeStamp'))), '2022-09-01').outputs.resourceId.value]"
              },
              {
                "name": "_SessionHostParameters",
                "value": "[string(createObject('location', parameters('sessionHostsRegion'), 'availabilityZones', parameters('availabilityZones'), 'vmSize', parameters('sessionHostSize'), 'acceleratedNetworking', parameters('acceleratedNetworking'), 'diskType', parameters('sessionHostDiskType'), 'imageReference', variables('imageReference'), 'securityProfile', createObject('securityType', parameters('securityType'), 'uefiSettings', createObject('secureBootEnabled', true(), 'vTpmEnabled', true())), 'subnetResourceId', parameters('subnetResourceId'), 'DomainJoinObject', variables('domainJoinObject'), 'DomainJoinPassword', if(equals(parameters('identityServiceProvider'), 'EntraID'), null(), createObject('reference', createObject('keyVault', createObject('id', reference(resourceId('Microsoft.Resources/deployments', format('deploy-key-vault-{0}', parameters('timeStamp'))), '2022-09-01').outputs.resourceId.value), 'secretName', 'DomainJoinPassword'))), 'AdminUsername', parameters('localAdminUsername'), 'tags', parameters('tags')))]"
              },
              {
                "name": "_SubscriptionId",
                "value": "[subscription().subscriptionId]"
              },
              {
                "name": "_RemoveAzureADDevice",
                "value": "[equals(parameters('identityServiceProvider'), 'EntraID')]"
              },
              {
                "name": "_ClientResourceId",
                "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]"
              },
              {
                "name": "_Tag_IncludeInAutomation",
                "value": "[parameters('tagIncludeInAutomation')]"
              },
              {
                "name": "_Tag_DeployTimestamp",
                "value": "[parameters('tagDeployTimestamp')]"
              },
              {
                "name": "_Tag_PendingDrainTimestamp",
                "value": "[parameters('tagPendingDrainTimestamp')]"
              },
              {
                "name": "_Tag_ScalingPlanExclusionTag",
                "value": "[parameters('tagScalingPlanExclusionTag')]"
              },
              {
                "name": "_TargetVMAgeDays",
                "value": "[parameters('targetVMAgeDays')]"
              },
              {
                "name": "_DrainGracePeriodHours",
                "value": "[parameters('drainGracePeriodHours')]"
              },
              {
                "name": "_FixSessionHostTags",
                "value": "[parameters('fixSessionHostTags')]"
              },
              {
                "name": "_SHRDeploymentPrefix",
                "value": "[parameters('shrDeploymentPrefix')]"
              },
              {
                "name": "_AllowDownsizing",
                "value": "[parameters('allowDownsizing')]"
              },
              {
                "name": "_SessionHostInstanceNumberPadding",
                "value": "[parameters('sessionHostInstanceNumberPadding')]"
              },
              {
                "name": "_ReplaceSessionHostOnNewImageVersion",
                "value": "[parameters('replaceSessionHostOnNewImageVersion')]"
              },
              {
                "name": "_ReplaceSessionHostOnNewImageVersionDelayDays",
                "value": "[parameters('replaceSessionHostOnNewImageVersionDelayDays')]"
              },
              {
                "name": "_VMNamesTemplateParameterName",
                "value": "[parameters('vmNamesTemplateParameterName')]"
              },
              {
                "name": "_SessionHostResourceGroupName",
                "value": "[parameters('sessionHostResourceGroupName')]"
              }
            ]
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "subnetResourceId": {
            "value": "[parameters('subnetResourceId')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "12614722600519321979"
            }
          },
          "parameters": {
            "applicationInsightsName": {
              "type": "string"
            },
            "appServicePlanName": {
              "type": "string"
            },
            "delegatedSubnetResourceId": {
              "type": "string"
            },
            "functionAppName": {
              "type": "string"
            },
            "functionAppNetworkInterfaceName": {
              "type": "string"
            },
            "functionAppPrivateDnsZoneResourceId": {
              "type": "string"
            },
            "functionAppPrivateEndpointName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "replacementPlanSettings": {
              "type": "array"
            },
            "storageAccountName": {
              "type": "string"
            },
            "subnetResourceId": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "variables": {
            "cloudSuffix": "[replace(replace(environment().resourceManager, 'https://management.', ''), '/', '')]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2023-01-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "tags": "[if(contains(parameters('tags'), 'Microsoft.Web/serverfarms'), parameters('tags')['Microsoft.Web/serverfarms'], createObject())]",
              "sku": {
                "tier": "ElasticPremium",
                "name": "EP1"
              },
              "kind": "functionapp",
              "properties": {
                "targetWorkerSizeId": 3,
                "targetWorkerCount": 1,
                "maximumElasticWorkerCount": 20,
                "zoneRedundant": false
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('functionAppName')]",
              "location": "[parameters('location')]",
              "tags": "[if(contains(parameters('tags'), 'Microsoft.Web/sites'), parameters('tags')['Microsoft.Web/sites'], createObject())]",
              "kind": "functionapp",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "clientAffinityEnabled": false,
                "httpsOnly": true,
                "publicNetworkAccess": "Disabled",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "siteConfig": {
                  "appSettings": "[union(createArray(createObject('name', 'FUNCTIONS_EXTENSION_VERSION', 'value', '~4'), createObject('name', 'FUNCTIONS_WORKER_RUNTIME', 'value', 'powershell'), createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject('name', 'AzureWebJobsStorage', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value, environment().suffixes.storage)), createObject('name', 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value, environment().suffixes.storage)), createObject('name', 'WEBSITE_CONTENTOVERVNET', 'value', 1), createObject('name', 'WEBSITE_CONTENTSHARE', 'value', toLower(parameters('functionAppName'))), createObject('name', 'EnvironmentName', 'value', environment().name), createObject('name', 'ResourceManagerUrl', 'value', if(endsWith(environment().resourceManager, '/'), environment().resourceManager, format('{0}/', environment().resourceManager))), createObject('name', 'SubscriptionId', 'value', subscription().subscriptionId), createObject('name', 'TenantId', 'value', subscription().tenantId)), parameters('replacementPlanSettings'))]",
                  "cors": {
                    "allowedOrigins": [
                      "[format('{0}', environment().portal)]",
                      "[format('https://functions-next.{0}', variables('cloudSuffix'))]",
                      "[format('https://functions-staging.{0}', variables('cloudSuffix'))]",
                      "[format('https://functions.{0}', variables('cloudSuffix'))]"
                    ]
                  },
                  "ftpsState": "Disabled",
                  "netFrameworkVersion": "v6.0",
                  "powerShellVersion": "7.2",
                  "use32BitWorkerProcess": false
                },
                "virtualNetworkSubnetId": "[parameters('delegatedSubnetResourceId')]",
                "vnetContentShareEnabled": true,
                "vnetRouteAllEnabled": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[parameters('functionAppPrivateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "customNetworkInterfaceName": "[parameters('functionAppNetworkInterfaceName')]",
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('functionAppPrivateEndpointName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                      "groupIds": [
                        "sites"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetResourceId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('functionAppPrivateEndpointName'), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateDnsZoneId": "[parameters('functionAppPrivateDnsZoneResourceId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('functionAppPrivateEndpointName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('deploy-key-vault-{0}', parameters('timeStamp')))]",
        "[resourceId('Microsoft.Resources/deployments', format('deploy-template-spec-{0}', parameters('timeStamp')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deploy-template-spec-{0}', parameters('timeStamp'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[parameters('templateSpecName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "11179779577307341242"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "name": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": {
              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "metadata": {
                "_generator": {
                  "name": "bicep",
                  "version": "0.29.45.22436",
                  "templateHash": "15758060740360418364"
                }
              },
              "parameters": {
                "Location": {
                  "type": "string",
                  "defaultValue": "[[resourceGroup().location]"
                },
                "AvailabilityZones": {
                  "type": "array",
                  "defaultValue": []
                },
                "VMNames": {
                  "type": "array"
                },
                "VMSize": {
                  "type": "string"
                },
                "SubnetID": {
                  "type": "string"
                },
                "AdminUsername": {
                  "type": "string"
                },
                "AcceleratedNetworking": {
                  "type": "bool"
                },
                "DiskType": {
                  "type": "string"
                },
                "Tags": {
                  "type": "object",
                  "defaultValue": {}
                },
                "ImageReference": {
                  "type": "object"
                },
                "SecurityProfile": {
                  "type": "object"
                },
                "HostPoolName": {
                  "type": "string"
                },
                "HostPoolToken": {
                  "type": "securestring"
                },
                "WVDArtifactsURL": {
                  "type": "string",
                  "defaultValue": "https://wvdportalstorageblob.blob.core.windows.net/galleryartifacts/Configuration_01-19-2023.zip"
                },
                "DomainJoinObject": {
                  "type": "object",
                  "defaultValue": {}
                },
                "DomainJoinPassword": {
                  "type": "securestring",
                  "defaultValue": ""
                }
              },
              "resources": [
                {
                  "[string('copy')]": {
                    "name": "deploySessionHosts",
                    "count": "[[length(parameters('VMNames'))]"
                  },
                  "type": "Microsoft.Resources/deployments",
                  "apiVersion": "2022-09-01",
                  "name": "[[format('deploySessionHost-{0}', parameters('VMNames')[copyIndex()])]",
                  "properties": {
                    "expressionEvaluationOptions": {
                      "scope": "inner"
                    },
                    "mode": "Incremental",
                    "parameters": {
                      "AcceleratedNetworking": {
                        "value": "[[parameters('AcceleratedNetworking')]"
                      },
                      "AdminUsername": {
                        "value": "[[parameters('AdminUsername')]"
                      },
                      "HostPoolName": {
                        "value": "[[parameters('HostPoolName')]"
                      },
                      "HostPoolToken": {
                        "value": "[[parameters('HostPoolToken')]"
                      },
                      "ImageReference": {
                        "value": "[[parameters('ImageReference')]"
                      },
                      "SecurityProfile": {
                        "value": "[[parameters('SecurityProfile')]"
                      },
                      "SubnetID": {
                        "value": "[[parameters('SubnetID')]"
                      },
                      "VMName": {
                        "value": "[[parameters('VMNames')[copyIndex()]]"
                      },
                      "VMSize": {
                        "value": "[[parameters('VMSize')]"
                      },
                      "DiskType": {
                        "value": "[[parameters('DiskType')]"
                      },
                      "WVDArtifactsURL": {
                        "value": "[[parameters('WVDArtifactsURL')]"
                      },
                      "DomainJoinObject": {
                        "value": "[[parameters('DomainJoinObject')]"
                      },
                      "DomainJoinPassword": {
                        "value": "[[parameters('DomainJoinPassword')]"
                      },
                      "Location": {
                        "value": "[[parameters('Location')]"
                      },
                      "AvailabilityZones": {
                        "value": "[[parameters('AvailabilityZones')]"
                      },
                      "Tags": {
                        "value": "[[parameters('Tags')]"
                      }
                    },
                    "template": {
                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "metadata": {
                        "_generator": {
                          "name": "bicep",
                          "version": "0.29.45.22436",
                          "templateHash": "7197712868022024044"
                        }
                      },
                      "parameters": {
                        "VMName": {
                          "type": "string"
                        },
                        "VMSize": {
                          "type": "string"
                        },
                        "DiskType": {
                          "type": "string"
                        },
                        "Location": {
                          "type": "string",
                          "defaultValue": "[[resourceGroup().location]"
                        },
                        "AvailabilityZones": {
                          "type": "array",
                          "defaultValue": []
                        },
                        "SubnetID": {
                          "type": "string"
                        },
                        "AdminUsername": {
                          "type": "string"
                        },
                        "AdminPassword": {
                          "type": "securestring",
                          "defaultValue": "[[newGuid()]"
                        },
                        "AcceleratedNetworking": {
                          "type": "bool"
                        },
                        "Tags": {
                          "type": "object",
                          "defaultValue": {}
                        },
                        "ImageReference": {
                          "type": "object"
                        },
                        "SecurityProfile": {
                          "type": "object"
                        },
                        "HostPoolName": {
                          "type": "string"
                        },
                        "HostPoolToken": {
                          "type": "securestring"
                        },
                        "WVDArtifactsURL": {
                          "type": "string"
                        },
                        "DomainJoinObject": {
                          "type": "object",
                          "defaultValue": {}
                        },
                        "DomainJoinPassword": {
                          "type": "securestring",
                          "defaultValue": ""
                        }
                      },
                      "variables": {
                        "varRequireNvidiaGPU": "[[or(startsWith(parameters('VMSize'), 'Standard_NC'), contains(parameters('VMSize'), '_A10_v5'))]",
                        "varVMNumber": "[[int(substring(parameters('VMName'), add(lastIndexOf(parameters('VMName'), '-'), 1), sub(sub(length(parameters('VMName')), lastIndexOf(parameters('VMName'), '-')), 1)))]",
                        "varAvailabilityZone": "[[if(equals(parameters('AvailabilityZones'), createArray()), createArray(), createArray(format('{0}', parameters('AvailabilityZones')[mod(variables('varVMNumber'), length(parameters('AvailabilityZones')))])))]"
                      },
                      "resources": [
                        {
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'deployIntegrityMonitoring')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.Azure.Security.WindowsAttestation",
                            "type": "GuestAttestation",
                            "typeHandlerVersion": "1.0",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "AttestationConfig": {
                                "MaaSettings": {
                                  "maaEndpoint": "",
                                  "maaTenantName": "Guest Attestation"
                                },
                                "AscSettings": {
                                  "ascReportingEndpoint": "",
                                  "ascReportingFrequency": ""
                                },
                                "useCustomToken": "false",
                                "disableAlerts": "false"
                              }
                            }
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "condition": "[[variables('varRequireNvidiaGPU')]",
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'deployGPUDriversNvidia')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.HpcCompute",
                            "type": "NvidiaGpuDriverWindows",
                            "typeHandlerVersion": "1.6",
                            "autoUpgradeMinorVersion": true
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'deployIntegrityMonitoring')]",
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "condition": "[[not(equals(parameters('HostPoolName'), ''))]",
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'JoinHostPool')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.PowerShell",
                            "type": "DSC",
                            "typeHandlerVersion": "2.77",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "modulesUrl": "[[parameters('WVDArtifactsURL')]",
                              "configurationFunction": "Configuration.ps1\\AddSessionHost",
                              "properties": {
                                "hostPoolName": "[[parameters('HostPoolName')]",
                                "registrationInfoToken": "[[parameters('HostPoolToken')]",
                                "aadJoin": "[[if(equals(parameters('DomainJoinObject').DomainType, 'EntraID'), true(), false())]",
                                "useAgentDownloadEndpoint": true,
                                "mdmId": "[[if(contains(parameters('DomainJoinObject'), 'IntuneJoin'), if(parameters('DomainJoinObject').IntuneJoin, '0000000a-0000-0000-c000-000000000000', ''), '')]"
                              }
                            }
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'deployGPUDriversNvidia')]",
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "condition": "[[equals(parameters('DomainJoinObject').DomainType, 'EntraID')]",
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'AADLoginForWindows')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.Azure.ActiveDirectory",
                            "type": "AADLoginForWindows",
                            "typeHandlerVersion": "2.0",
                            "autoUpgradeMinorVersion": true,
                            "settings": "[[if(contains(parameters('DomainJoinObject'), 'IntuneJoin'), if(parameters('DomainJoinObject').IntuneJoin, createObject('mdmId', '0000000a-0000-0000-c000-000000000000'), null()), null())]"
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'JoinHostPool')]",
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "condition": "[[equals(parameters('DomainJoinObject').DomainType, 'ActiveDirectory')]",
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'DomainJoin')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.Compute",
                            "type": "JSonADDomainExtension",
                            "typeHandlerVersion": "1.3",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "Name": "[[parameters('DomainJoinObject').DomainName]",
                              "OUPath": "[[parameters('DomainJoinObject').OUPath]",
                              "User": "[[format('{0}\\{1}', parameters('DomainJoinObject').DomainName, parameters('DomainJoinObject').UserName)]",
                              "Restart": "true",
                              "Options": 3
                            },
                            "protectedSettings": {
                              "Password": "[[parameters('DomainJoinPassword')]"
                            }
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'JoinHostPool')]",
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "type": "Microsoft.Network/networkInterfaces",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}-vNIC', parameters('VMName'))]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "ipConfigurations": [
                              {
                                "name": "ipconfig1",
                                "properties": {
                                  "subnet": {
                                    "id": "[[parameters('SubnetID')]"
                                  }
                                }
                              }
                            ],
                            "enableAcceleratedNetworking": "[[parameters('AcceleratedNetworking')]"
                          },
                          "tags": "[[parameters('Tags')]"
                        },
                        {
                          "type": "Microsoft.Compute/virtualMachines",
                          "apiVersion": "2023-09-01",
                          "name": "[[parameters('VMName')]",
                          "location": "[[parameters('Location')]",
                          "zones": "[[variables('varAvailabilityZone')]",
                          "identity": "[[if(equals(parameters('DomainJoinObject').DomainType, 'EntraID'), createObject('type', 'SystemAssigned'), null())]",
                          "properties": {
                            "osProfile": {
                              "computerName": "[[parameters('VMName')]",
                              "adminUsername": "[[parameters('AdminUsername')]",
                              "adminPassword": "[[parameters('AdminPassword')]"
                            },
                            "hardwareProfile": {
                              "vmSize": "[[parameters('VMSize')]"
                            },
                            "storageProfile": {
                              "osDisk": {
                                "name": "[[format('{0}-OSDisk', parameters('VMName'))]",
                                "createOption": "FromImage",
                                "deleteOption": "Delete",
                                "managedDisk": {
                                  "storageAccountType": "[[parameters('DiskType')]"
                                }
                              },
                              "ImageReference": "[[parameters('ImageReference')]"
                            },
                            "securityProfile": "[[parameters('SecurityProfile')]",
                            "diagnosticsProfile": {
                              "bootDiagnostics": {
                                "enabled": true
                              }
                            },
                            "networkProfile": {
                              "networkInterfaces": [
                                {
                                  "id": "[[resourceId('Microsoft.Network/networkInterfaces', format('{0}-vNIC', parameters('VMName')))]",
                                  "properties": {
                                    "deleteOption": "Delete"
                                  }
                                }
                              ]
                            },
                            "licenseType": "Windows_Client"
                          },
                          "tags": "[[parameters('Tags')]",
                          "dependsOn": [
                            "[[resourceId('Microsoft.Network/networkInterfaces', format('{0}-vNIC', parameters('VMName')))]"
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/templateSpecs/versions",
              "apiVersion": "2022-02-01",
              "name": "[format('{0}/{1}', parameters('name'), 'deploymentTemplateSpecVersion')]",
              "location": "[parameters('location')]",
              "properties": {
                "mainTemplate": "[variables('$fxv#0')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/templateSpecs",
              "apiVersion": "2022-02-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "description": "Template Spec for deploying VMs through the AVD Replacement Plan",
                "displayName": "AVD Replacement Plan Session Host Template"
              }
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Resources/templateSpecs', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('assign-rbac-host-pool-{0}', parameters('timeStamp'))]",
      "subscriptionId": "[subscription().subscriptionId]",
      "location": "[resourceGroup().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prinicpalId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName')), '2023-01-31').principalId]"
          },
          "roleDefinitionId": {
            "value": "a959dbd1-f747-45e3-8ba6-dd80f235f97c"
          },
          "scope": {
            "value": "[subscription().id]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "852792330190262115"
            }
          },
          "parameters": {
            "prinicpalId": {
              "type": "string"
            },
            "roleDefinitionId": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('prinicpalId'), parameters('roleDefinitionId'), parameters('scope'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]",
                "principalId": "[parameters('prinicpalId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('assign-rbac-template-spec-{0}', parameters('timeStamp'))]",
      "subscriptionId": "[subscription().subscriptionId]",
      "location": "[resourceGroup().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prinicpalId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName')), '2023-01-31').principalId]"
          },
          "roleDefinitionId": {
            "value": "392ae280-861d-42bd-9ea5-08ee6d83b80e"
          },
          "scope": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('deploy-template-spec-{0}', parameters('timeStamp'))), '2022-09-01').outputs.resourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "852792330190262115"
            }
          },
          "parameters": {
            "prinicpalId": {
              "type": "string"
            },
            "roleDefinitionId": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('prinicpalId'), parameters('roleDefinitionId'), parameters('scope'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]",
                "principalId": "[parameters('prinicpalId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('deploy-template-spec-{0}', parameters('timeStamp')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]"
      ]
    }
  ]
}