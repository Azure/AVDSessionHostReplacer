{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.45.22436",
      "templateHash": "15010553664224111526"
    }
  },
  "parameters": {
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Required: No | Region of the Function App. This does not need to be the same as the location of the Azure Virtual Desktop Host Pool. | Default: Location of the resource group."
      }
    },
    "EnableMonitoring": {
      "type": "bool",
      "defaultValue": true
    },
    "UseExistingLAW": {
      "type": "bool",
      "defaultValue": false
    },
    "LogAnalyticsWorkspaceId": {
      "type": "string",
      "defaultValue": "none",
      "metadata": {
        "description": "Required: Yes | Name of the Log Analytics Workspace used by the Function App Insights."
      }
    },
    "SessionHostsRegion": {
      "type": "string"
    },
    "AvailabilityZones": {
      "type": "array",
      "defaultValue": []
    },
    "SessionHostSize": {
      "type": "string"
    },
    "AcceleratedNetworking": {
      "type": "bool"
    },
    "SessionHostDiskType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS"
      ]
    },
    "MarketPlaceOrCustomImage": {
      "type": "string",
      "allowedValues": [
        "Marketplace",
        "Gallery"
      ]
    },
    "MarketPlaceImage": {
      "type": "string",
      "defaultValue": "win11-23h2-avd-m365",
      "allowedValues": [
        "2022-datacenter-smalldisk-g2",
        "win10-21h2-avd",
        "2022-datacenter-core-g2",
        "win10-22h2-avd-m365-g2",
        "win11-21h2-avd",
        "win10-21h2-avd-m365",
        "win11-22h2-avd-m365",
        "2022-datacenter-core-smalldisk-g2",
        "win11-21h2-avd-m365",
        "win11-23h2-avd",
        "win11-23h2-avd-m365",
        "win11-22h2-avd",
        "2022-datacenter-g2",
        "win10-22h2-avd-g2"
      ]
    },
    "GalleryImageId": {
      "type": "string",
      "defaultValue": ""
    },
    "SecurityType": {
      "type": "string",
      "defaultValue": "TrustedLaunch",
      "allowedValues": [
        "Standard",
        "TrustedLaunch",
        "ConfidentialVM"
      ]
    },
    "SecureBootEnabled": {
      "type": "bool",
      "defaultValue": true
    },
    "TpmEnabled": {
      "type": "bool",
      "defaultValue": true
    },
    "SubnetId": {
      "type": "string"
    },
    "IdentityServiceProvider": {
      "type": "string",
      "allowedValues": [
        "EntraID",
        "ActiveDirectory",
        "EntraDS"
      ]
    },
    "IntuneEnrollment": {
      "type": "bool",
      "defaultValue": false
    },
    "ADDomainName": {
      "type": "string",
      "defaultValue": ""
    },
    "ADDomainJoinUserName": {
      "type": "string",
      "defaultValue": ""
    },
    "ADJoinUserPassword": {
      "type": "securestring",
      "defaultValue": ""
    },
    "ADOUPath": {
      "type": "string",
      "defaultValue": ""
    },
    "LocalAdminUsername": {
      "type": "string"
    },
    "HostPoolResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Required: No | Name of the resource group containing the Azure Virtual Desktop Host Pool. | Default: The resource group of the Function App."
      }
    },
    "HostPoolName": {
      "type": "string",
      "metadata": {
        "description": "Required: Yes | Name of the Azure Virtual Desktop Host Pool."
      }
    },
    "SessionHostNamePrefix": {
      "type": "string",
      "maxLength": 12,
      "metadata": {
        "description": "Required: Yes | Prefix used for the name of the session hosts."
      }
    },
    "TargetSessionHostCount": {
      "type": "int",
      "metadata": {
        "description": "Required: Yes | Number of session hosts to maintain in the host pool."
      }
    },
    "UseUserAssignedManagedIdentity": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Required: No | Resource Id of the User Assigned Managed Identity to use for the Function App. | Default: System Identity"
      }
    },
    "UserAssignedManagedIdentityResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "TagIncludeInAutomation": {
      "type": "string",
      "defaultValue": "IncludeInAutoReplace",
      "metadata": {
        "description": "Required: No | Tag name used to indicate that a session host should be included in the automatic replacement process. | Default: IncludeInAutoReplace."
      }
    },
    "TagDeployTimestamp": {
      "type": "string",
      "defaultValue": "AutoReplaceDeployTimestamp",
      "metadata": {
        "description": "Required: No | Tag name used to indicate the timestamp of the last deployment of a session host. | Default: AutoReplaceDeployTimestamp."
      }
    },
    "TagPendingDrainTimestamp": {
      "type": "string",
      "defaultValue": "AutoReplacePendingDrainTimestamp",
      "metadata": {
        "description": "Required: No | Tag name used to indicate drain timestamp of session host pending deletion. | Default: AutoReplacePendingDrainTimestamp."
      }
    },
    "TagScalingPlanExclusionTag": {
      "type": "string",
      "defaultValue": "ScalingPlanExclusion",
      "metadata": {
        "description": "Required: No | Tag name used to exclude session host from Scaling Plan activities. | Default: ScalingPlanExclusion"
      }
    },
    "TargetVMAgeDays": {
      "type": "int",
      "defaultValue": 45,
      "metadata": {
        "description": "Required: No | Target age of session hosts in days. | Default:  45 days."
      }
    },
    "DrainGracePeriodHours": {
      "type": "int",
      "defaultValue": 24,
      "metadata": {
        "description": "Required: No | Grace period in hours for session hosts to drain before deletion. | Default: 24 hours."
      }
    },
    "FixSessionHostTags": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Required: No | If true, will apply tags for Include In Auto Replace and Deployment Timestamp to existing session hosts. This will not enable automatic deletion of existing session hosts. | Default: True."
      }
    },
    "SHRDeploymentPrefix": {
      "type": "string",
      "defaultValue": "AVDSessionHostReplacer",
      "metadata": {
        "description": "Required: No | Prefix used for the deployment name of the session hosts. | Default: AVDSessionHostReplacer"
      }
    },
    "AllowDownsizing": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Required: No | Allow deleting session hosts if count exceeds target. | Default: true"
      }
    },
    "SessionHostInstanceNumberPadding": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Required: No | Number of digits to use for the instance number of the session hosts (eg. AVDVM-01). | Default: 2"
      }
    },
    "ReplaceSessionHostOnNewImageVersion": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Required: No | If true, will replace session hosts when a new image version is detected. | Default: true"
      }
    },
    "ReplaceSessionHostOnNewImageVersionDelayDays": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Required: No | Delay in days before replacing session hosts when a new image version is detected. | Default: 0 (no delay)."
      }
    },
    "VMNamesTemplateParameterName": {
      "type": "string",
      "defaultValue": "VMNames",
      "metadata": {
        "description": "Required: No | The name of the parameter in the template that specifies the VM Names array."
      }
    },
    "SessionHostResourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Required: No | Leave this empty to deploy to same resource group as the host pool."
      }
    },
    "TimeStamp": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "variables": {
    "varMarketPlaceImages": {
      "win10-21h2-avd": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "windows-10",
        "sku": "win10-21h2-avd"
      },
      "win10-21h2-avd-g2": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "windows-10",
        "sku": "win10-21h2-avd-g2"
      },
      "win10-21h2-avd-m365": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "win10-21h2-avd-m365"
      },
      "win10-21h2-avd-m365-g2": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "win10-21h2-avd-m365-g2"
      },
      "win10-22h2-avd": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "windows-10",
        "sku": "win10-22h2-avd"
      },
      "win10-22h2-avd-g2": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "windows-10",
        "sku": "win10-22h2-avd-g2"
      },
      "win10-22h2-avd-m365": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "win10-22h2-avd-m365"
      },
      "win10-22h2-avd-m365-g2": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "win10-22h2-avd-m365-g2"
      },
      "win11-21h2-avd": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "windows-11",
        "sku": "win11-21h2-avd"
      },
      "win11-21h2-avd-m365": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "win11-21h2-avd-m365"
      },
      "win11-22h2-avd": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "windows-11",
        "sku": "win11-22h2-avd"
      },
      "win11-22h2-avd-m365": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "win11-22h2-avd-m365"
      },
      "win11-23h2-avd": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "windows-11",
        "sku": "win11-23h2-avd"
      },
      "win11-23h2-avd-m365": {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "office-365",
        "sku": "win11-23h2-avd-m365"
      }
    },
    "varImageReference": "[if(equals(parameters('MarketPlaceOrCustomImage'), 'Marketplace'), createObject('publisher', variables('varMarketPlaceImages')[parameters('MarketPlaceImage')].publisher, 'offer', variables('varMarketPlaceImages')[parameters('MarketPlaceImage')].offer, 'sku', variables('varMarketPlaceImages')[parameters('MarketPlaceImage')].sku, 'version', 'latest'), createObject('Id', parameters('GalleryImageId')))]",
    "varSecurityProfile": "[if(equals(parameters('SecurityType'), 'Standard'), null(), createObject('securityType', parameters('SecurityType'), 'uefiSettings', createObject('secureBootEnabled', parameters('SecureBootEnabled'), 'vTpmEnabled', parameters('TpmEnabled'))))]",
    "varDomainJoinObject": "[if(equals(parameters('IdentityServiceProvider'), 'EntraID'), createObject('DomainType', 'EntraID', 'IntuneJoin', parameters('IntuneEnrollment')), createObject('DomainType', 'ActiveDirectory', 'DomainName', parameters('ADDomainName'), 'DomainJoinUserName', parameters('ADDomainJoinUserName'), 'ADOUPath', parameters('ADOUPath')))]",
    "varUniqueString": "[uniqueString(resourceGroup().id, parameters('HostPoolName'))]",
    "varFunctionAppName": "[format('AVDSessionHostReplacer-{0}', uniqueString(resourceGroup().id, parameters('HostPoolName')))]",
    "varFunctionAppIdentity": "[if(parameters('UseUserAssignedManagedIdentity'), createObject('type', 'UserAssigned', 'userAssignedIdentities', createObject(format('{0}', parameters('UserAssignedManagedIdentityResourceId')), createObject())), createObject('type', 'SystemAssigned'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deployFunctionApp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "FunctionAppName": {
            "value": "[variables('varFunctionAppName')]"
          },
          "EnableMonitoring": {
            "value": "[parameters('EnableMonitoring')]"
          },
          "UseExistingLAW": {
            "value": "[parameters('UseExistingLAW')]"
          },
          "LogAnalyticsWorkspaceId": {
            "value": "[parameters('LogAnalyticsWorkspaceId')]"
          },
          "ReplacementPlanSettings": {
            "value": [
              {
                "name": "_HostPoolResourceGroupName",
                "value": "[parameters('HostPoolResourceGroupName')]"
              },
              {
                "name": "_HostPoolName",
                "value": "[parameters('HostPoolName')]"
              },
              {
                "name": "_TargetSessionHostCount",
                "value": "[parameters('TargetSessionHostCount')]"
              },
              {
                "name": "_SessionHostNamePrefix",
                "value": "[parameters('SessionHostNamePrefix')]"
              },
              {
                "name": "_SessionHostTemplate",
                "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployStandardSessionHostTemplate'), '2022-09-01').outputs.TemplateSpecResourceId.value]"
              },
              {
                "name": "_SessionHostParameters",
                "value": "[string(createObject('Location', parameters('SessionHostsRegion'), 'AvailabilityZones', parameters('AvailabilityZones'), 'VMSize', parameters('SessionHostSize'), 'AcceleratedNetworking', parameters('AcceleratedNetworking'), 'DiskType', parameters('SessionHostDiskType'), 'ImageReference', variables('varImageReference'), 'SecurityProfile', variables('varSecurityProfile'), 'SubnetId', parameters('SubnetId'), 'DomainJoinObject', variables('varDomainJoinObject'), 'DomainJoinPassword', if(equals(parameters('IdentityServiceProvider'), 'EntraID'), null(), createObject('reference', createObject('keyVault', createObject('id', reference(resourceId('Microsoft.Resources/deployments', 'deployKeyVault'), '2022-09-01').outputs.keyVaultId.value), 'secretName', 'DomainJoinPassword'))), 'AdminUsername', parameters('LocalAdminUsername'), 'tags', createObject()))]"
              },
              {
                "name": "_SubscriptionId",
                "value": "[subscription().subscriptionId]"
              },
              {
                "name": "_RemoveEntraDevice",
                "value": "[equals(parameters('IdentityServiceProvider'), 'EntraID')]"
              },
              {
                "name": "_RemoveIntuneDevice",
                "value": "[parameters('IntuneEnrollment')]"
              },
              {
                "name": "_ClientResourceId",
                "value": "[parameters('UserAssignedManagedIdentityResourceId')]"
              },
              {
                "name": "_Tag_IncludeInAutomation",
                "value": "[parameters('TagIncludeInAutomation')]"
              },
              {
                "name": "_Tag_DeployTimestamp",
                "value": "[parameters('TagDeployTimestamp')]"
              },
              {
                "name": "_Tag_PendingDrainTimestamp",
                "value": "[parameters('TagPendingDrainTimestamp')]"
              },
              {
                "name": "_Tag_ScalingPlanExclusionTag",
                "value": "[parameters('TagScalingPlanExclusionTag')]"
              },
              {
                "name": "_TargetVMAgeDays",
                "value": "[parameters('TargetVMAgeDays')]"
              },
              {
                "name": "_DrainGracePeriodHours",
                "value": "[parameters('DrainGracePeriodHours')]"
              },
              {
                "name": "_FixSessionHostTags",
                "value": "[parameters('FixSessionHostTags')]"
              },
              {
                "name": "_SHRDeploymentPrefix",
                "value": "[parameters('SHRDeploymentPrefix')]"
              },
              {
                "name": "_AllowDownsizing",
                "value": "[parameters('AllowDownsizing')]"
              },
              {
                "name": "_SessionHostInstanceNumberPadding",
                "value": "[parameters('SessionHostInstanceNumberPadding')]"
              },
              {
                "name": "_ReplaceSessionHostOnNewImageVersion",
                "value": "[parameters('ReplaceSessionHostOnNewImageVersion')]"
              },
              {
                "name": "_ReplaceSessionHostOnNewImageVersionDelayDays",
                "value": "[parameters('ReplaceSessionHostOnNewImageVersionDelayDays')]"
              },
              {
                "name": "_VMNamesTemplateParameterName",
                "value": "[parameters('VMNamesTemplateParameterName')]"
              },
              {
                "name": "_SessionHostResourceGroupName",
                "value": "[parameters('SessionHostResourceGroupName')]"
              }
            ]
          },
          "FunctionAppIdentity": {
            "value": "[variables('varFunctionAppIdentity')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.45.22436",
              "templateHash": "5852774460398704051"
            }
          },
          "parameters": {
            "Location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Required: No | Region of the Function App. This does not need to be the same as the location of the Azure Virtual Desktop Host Pool. | Default: Location of the resource group."
              }
            },
            "EnableMonitoring": {
              "type": "bool",
              "defaultValue": true
            },
            "UseExistingLAW": {
              "type": "bool",
              "defaultValue": false
            },
            "LogAnalyticsWorkspaceId": {
              "type": "string",
              "defaultValue": "none",
              "metadata": {
                "description": "Required: Yes | Name of the Log Analytics Workspace used by the Function App Insights."
              }
            },
            "FunctionAppName": {
              "type": "string",
              "metadata": {
                "description": "Required: Yes | Name of the Function App."
              }
            },
            "FunctionAppZipUrl": {
              "type": "string",
              "defaultValue": "https://github.com/Azure/AVDSessionHostReplacer/releases/download/v0.2.8-beta.10/FunctionApp.zip",
              "metadata": {
                "description": "Required: No | URL of the FunctionApp.zip file. This is the zip file containing the Function App code. | Default: The latest release of the Function App code."
              }
            },
            "AppPlanName": {
              "type": "string",
              "defaultValue": "Y1",
              "metadata": {
                "description": "Required: No | App Service Plan Name | Default: Y1 for consumption based plan"
              }
            },
            "AppPlanTier": {
              "type": "string",
              "defaultValue": "Dynamic",
              "metadata": {
                "description": "Required: No | App Service Plan Tier | Default: Dynamic for consumption based plan"
              }
            },
            "ReplacementPlanSettings": {
              "type": "array",
              "metadata": {
                "description": "Required: Yes | The following settings are mandatory. Rest are optional.\n[\n  {\n    name: '_HostPoolResourceGroupName'\n    value: 'string'\n  }\n  {\n    name: '_HostPoolName'\n    value: 'string'\n  }\n  {\n    name: '_RemoveEntraDevice'\n    value: 'bool'\n  }\n  {\n    name: '_SessionHostTemplate'\n    value: 'string'\n  }\n  {\n    name: '_SessionHostParameters'\n    value: 'hashtable'\n  }\n  {\n    name: '_SubscriptionId'\n    value: 'string'\n  }\n  {\n    name: '_TargetSessionHostCount'\n    value: 'int'\n  }\n  {\n    name: '_SessionHostNamePrefix'\n    value: 'string'\n  }\n]"
              }
            },
            "FunctionAppIdentity": {
              "type": "object",
              "defaultValue": {
                "type": "SystemAssigned"
              }
            }
          },
          "variables": {
            "varStorageAccountName": "[format('stavdrpfunc{0}', uniqueString(parameters('FunctionAppName')))]",
            "varLogAnalyticsWorkspaceName": "[format('{0}-law', parameters('FunctionAppName'))]",
            "varAppServicePlanName": "[format('{0}-asp', parameters('FunctionAppName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/extensions",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('FunctionAppName'), 'MSDeploy')]",
              "properties": {
                "packageUri": "[parameters('FunctionAppZipUrl')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('FunctionAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[variables('varStorageAccountName')]",
              "location": "[parameters('Location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {}
            },
            {
              "condition": "[and(parameters('EnableMonitoring'), not(parameters('UseExistingLAW')))]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2023-09-01",
              "name": "[variables('varLogAnalyticsWorkspaceName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[variables('varAppServicePlanName')]",
              "location": "[parameters('Location')]",
              "sku": {
                "name": "[parameters('AppPlanName')]",
                "tier": "[parameters('AppPlanTier')]"
              }
            },
            {
              "condition": "[parameters('EnableMonitoring')]",
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('varAppServicePlanName')]",
              "location": "[parameters('Location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled",
                "WorkspaceResourceId": "[if(parameters('UseExistingLAW'), parameters('LogAnalyticsWorkspaceId'), resourceId('Microsoft.OperationalInsights/workspaces', variables('varLogAnalyticsWorkspaceName')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('varLogAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('FunctionAppName')]",
              "location": "[parameters('Location')]",
              "kind": "functionApp",
              "identity": "[parameters('FunctionAppIdentity')]",
              "properties": {
                "httpsOnly": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('varAppServicePlanName'))]",
                "siteConfig": {
                  "use32BitWorkerProcess": false,
                  "powerShellVersion": "7.2",
                  "netFrameworkVersion": "v6.0",
                  "appSettings": "[union(createArray(createObject('name', 'FUNCTIONS_EXTENSION_VERSION', 'value', '~4'), createObject('name', 'FUNCTIONS_WORKER_RUNTIME', 'value', 'powershell'), createObject('name', 'AzureWebJobsStorage', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('varStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('varStorageAccountName')), '2022-05-01').keys[0].value)), createObject('name', 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING', 'value', format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('varStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('varStorageAccountName')), '2022-05-01').keys[0].value)), createObject('name', 'APPINSIGHTS_INSTRUMENTATIONKEY', 'value', reference(resourceId('Microsoft.Insights/components', variables('varAppServicePlanName')), '2020-02-02').InstrumentationKey), createObject('name', 'WEBSITE_CONTENTSHARE', 'value', toLower(parameters('FunctionAppName')))), if(parameters('EnableMonitoring'), createArray(createObject('name', 'APPINSIGHTS_INSTRUMENTATIONKEY', 'value', reference(resourceId('Microsoft.Insights/components', variables('varAppServicePlanName')), '2020-02-02').InstrumentationKey)), createArray()), parameters('ReplacementPlanSettings'))]",
                  "ftpsState": "Disabled",
                  "cors": {
                    "allowedOrigins": [
                      "https://portal.azure.com"
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', variables('varAppServicePlanName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('varAppServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('varStorageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "functionAppPrincipalId": {
              "type": "string",
              "value": "[if(equals(parameters('FunctionAppIdentity').type, 'SystemAssigned'), reference(resourceId('Microsoft.Web/sites', parameters('FunctionAppName')), '2023-01-01', 'full').identity.principalId, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deployKeyVault')]",
        "[resourceId('Microsoft.Resources/deployments', 'deployStandardSessionHostTemplate')]"
      ]
    },
    {
      "condition": "[not(equals(parameters('IdentityServiceProvider'), 'EntraID'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deployKeyVault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "KeyVaultName": {
            "value": "[format('kv-AVDSHR-{0}', variables('varUniqueString'))]"
          },
          "DomainJoinPassword": {
            "value": "[parameters('ADJoinUserPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.45.22436",
              "templateHash": "5445249370521833019"
            }
          },
          "parameters": {
            "Location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "KeyVaultName": {
              "type": "string"
            },
            "DomainJoinPassword": {
              "type": "securestring"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('KeyVaultName'), 'DomainJoinPassword')]",
              "properties": {
                "value": "[parameters('DomainJoinPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[parameters('KeyVaultName')]",
              "location": "[parameters('Location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForTemplateDeployment": true,
                "enableRbacAuthorization": true
              }
            }
          ],
          "outputs": {
            "keyVaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deployStandardSessionHostTemplate",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "Name": {
            "value": "[format('{0}-Spec', parameters('HostPoolName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.45.22436",
              "templateHash": "5880759918468442717"
            }
          },
          "parameters": {
            "Name": {
              "type": "string"
            },
            "Location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "$fxv#0": {
              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "metadata": {
                "_generator": {
                  "name": "bicep",
                  "version": "0.29.45.22436",
                  "templateHash": "2229400358260549179"
                }
              },
              "parameters": {
                "Location": {
                  "type": "string",
                  "defaultValue": "[[resourceGroup().location]"
                },
                "AvailabilityZones": {
                  "type": "array",
                  "defaultValue": []
                },
                "VMNames": {
                  "type": "array"
                },
                "VMSize": {
                  "type": "string"
                },
                "SubnetID": {
                  "type": "string"
                },
                "AdminUsername": {
                  "type": "string"
                },
                "AcceleratedNetworking": {
                  "type": "bool"
                },
                "DiskType": {
                  "type": "string"
                },
                "Tags": {
                  "type": "object",
                  "defaultValue": {}
                },
                "ImageReference": {
                  "type": "object"
                },
                "SecurityProfile": {
                  "type": "object",
                  "defaultValue": {}
                },
                "HostPoolName": {
                  "type": "string"
                },
                "HostPoolToken": {
                  "type": "securestring"
                },
                "WVDArtifactsURL": {
                  "type": "string",
                  "defaultValue": "https://wvdportalstorageblob.blob.core.windows.net/galleryartifacts/Configuration_01-19-2023.zip"
                },
                "DomainJoinObject": {
                  "type": "object",
                  "defaultValue": {}
                },
                "DomainJoinPassword": {
                  "type": "securestring",
                  "defaultValue": ""
                }
              },
              "resources": [
                {
                  "[string('copy')]": {
                    "name": "deploySessionHosts",
                    "count": "[[length(parameters('VMNames'))]"
                  },
                  "type": "Microsoft.Resources/deployments",
                  "apiVersion": "2022-09-01",
                  "name": "[[format('deploySessionHost-{0}', parameters('VMNames')[copyIndex()])]",
                  "properties": {
                    "expressionEvaluationOptions": {
                      "scope": "inner"
                    },
                    "mode": "Incremental",
                    "parameters": {
                      "AcceleratedNetworking": {
                        "value": "[[parameters('AcceleratedNetworking')]"
                      },
                      "AdminUsername": {
                        "value": "[[parameters('AdminUsername')]"
                      },
                      "HostPoolName": {
                        "value": "[[parameters('HostPoolName')]"
                      },
                      "HostPoolToken": {
                        "value": "[[parameters('HostPoolToken')]"
                      },
                      "ImageReference": {
                        "value": "[[parameters('ImageReference')]"
                      },
                      "SecurityProfile": {
                        "value": "[[parameters('SecurityProfile')]"
                      },
                      "SubnetID": {
                        "value": "[[parameters('SubnetID')]"
                      },
                      "VMName": {
                        "value": "[[parameters('VMNames')[copyIndex()]]"
                      },
                      "VMSize": {
                        "value": "[[parameters('VMSize')]"
                      },
                      "DiskType": {
                        "value": "[[parameters('DiskType')]"
                      },
                      "WVDArtifactsURL": {
                        "value": "[[parameters('WVDArtifactsURL')]"
                      },
                      "DomainJoinObject": {
                        "value": "[[parameters('DomainJoinObject')]"
                      },
                      "DomainJoinPassword": {
                        "value": "[[parameters('DomainJoinPassword')]"
                      },
                      "Location": {
                        "value": "[[parameters('Location')]"
                      },
                      "AvailabilityZones": {
                        "value": "[[parameters('AvailabilityZones')]"
                      },
                      "Tags": {
                        "value": "[[parameters('Tags')]"
                      }
                    },
                    "template": {
                      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "metadata": {
                        "_generator": {
                          "name": "bicep",
                          "version": "0.29.45.22436",
                          "templateHash": "13883562713745559077"
                        }
                      },
                      "parameters": {
                        "VMName": {
                          "type": "string"
                        },
                        "VMSize": {
                          "type": "string"
                        },
                        "DiskType": {
                          "type": "string"
                        },
                        "Location": {
                          "type": "string",
                          "defaultValue": "[[resourceGroup().location]"
                        },
                        "AvailabilityZones": {
                          "type": "array",
                          "defaultValue": []
                        },
                        "SubnetID": {
                          "type": "string"
                        },
                        "AdminUsername": {
                          "type": "string"
                        },
                        "AdminPassword": {
                          "type": "securestring",
                          "defaultValue": "[[newGuid()]"
                        },
                        "AcceleratedNetworking": {
                          "type": "bool"
                        },
                        "Tags": {
                          "type": "object",
                          "defaultValue": {}
                        },
                        "ImageReference": {
                          "type": "object"
                        },
                        "SecurityProfile": {
                          "type": "object"
                        },
                        "HostPoolName": {
                          "type": "string"
                        },
                        "HostPoolToken": {
                          "type": "securestring"
                        },
                        "WVDArtifactsURL": {
                          "type": "string"
                        },
                        "DomainJoinObject": {
                          "type": "object",
                          "defaultValue": {}
                        },
                        "DomainJoinPassword": {
                          "type": "securestring",
                          "defaultValue": ""
                        }
                      },
                      "variables": {
                        "varRequireNvidiaGPU": "[[or(startsWith(parameters('VMSize'), 'Standard_NC'), contains(parameters('VMSize'), '_A10_v5'))]",
                        "varVMNumber": "[[int(substring(parameters('VMName'), add(lastIndexOf(parameters('VMName'), '-'), 1), sub(sub(length(parameters('VMName')), lastIndexOf(parameters('VMName'), '-')), 1)))]",
                        "varAvailabilityZone": "[[if(equals(parameters('AvailabilityZones'), createArray()), createArray(), createArray(format('{0}', parameters('AvailabilityZones')[mod(variables('varVMNumber'), length(parameters('AvailabilityZones')))])))]"
                      },
                      "resources": [
                        {
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'deployIntegrityMonitoring')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.Azure.Security.WindowsAttestation",
                            "type": "GuestAttestation",
                            "typeHandlerVersion": "1.0",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "AttestationConfig": {
                                "MaaSettings": {
                                  "maaEndpoint": "",
                                  "maaTenantName": "Guest Attestation"
                                },
                                "AscSettings": {
                                  "ascReportingEndpoint": "",
                                  "ascReportingFrequency": ""
                                },
                                "useCustomToken": "false",
                                "disableAlerts": "false"
                              }
                            }
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "condition": "[[variables('varRequireNvidiaGPU')]",
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'deployGPUDriversNvidia')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.HpcCompute",
                            "type": "NvidiaGpuDriverWindows",
                            "typeHandlerVersion": "1.6",
                            "autoUpgradeMinorVersion": true
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'deployIntegrityMonitoring')]",
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "condition": "[[not(equals(parameters('HostPoolName'), ''))]",
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'JoinHostPool')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.PowerShell",
                            "type": "DSC",
                            "typeHandlerVersion": "2.77",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "modulesUrl": "[[parameters('WVDArtifactsURL')]",
                              "configurationFunction": "Configuration.ps1\\AddSessionHost",
                              "properties": {
                                "hostPoolName": "[[parameters('HostPoolName')]",
                                "registrationInfoToken": "[[parameters('HostPoolToken')]",
                                "aadJoin": "[[if(equals(parameters('DomainJoinObject').DomainType, 'EntraID'), true(), false())]",
                                "useAgentDownloadEndpoint": true,
                                "mdmId": "[[if(contains(parameters('DomainJoinObject'), 'IntuneJoin'), if(parameters('DomainJoinObject').IntuneJoin, '0000000a-0000-0000-c000-000000000000', ''), '')]"
                              }
                            }
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'deployGPUDriversNvidia')]",
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "condition": "[[equals(parameters('DomainJoinObject').DomainType, 'EntraID')]",
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'AADLoginForWindows')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.Azure.ActiveDirectory",
                            "type": "AADLoginForWindows",
                            "typeHandlerVersion": "2.0",
                            "autoUpgradeMinorVersion": true,
                            "settings": "[[if(contains(parameters('DomainJoinObject'), 'IntuneJoin'), if(parameters('DomainJoinObject').IntuneJoin, createObject('mdmId', '0000000a-0000-0000-c000-000000000000'), null()), null())]"
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'JoinHostPool')]",
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "condition": "[[equals(parameters('DomainJoinObject').DomainType, 'ActiveDirectory')]",
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}/{1}', parameters('VMName'), 'DomainJoin')]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "publisher": "Microsoft.Compute",
                            "type": "JSonADDomainExtension",
                            "typeHandlerVersion": "1.3",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "Name": "[[parameters('DomainJoinObject').DomainName]",
                              "OUPath": "[[parameters('DomainJoinObject').ADOUPath]",
                              "User": "[[format('{0}\\{1}', parameters('DomainJoinObject').DomainName, parameters('DomainJoinObject').DomainJoinUserName)]",
                              "Restart": "true",
                              "Options": 3
                            },
                            "protectedSettings": {
                              "Password": "[[parameters('DomainJoinPassword')]"
                            }
                          },
                          "dependsOn": [
                            "[[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VMName'), 'JoinHostPool')]",
                            "[[resourceId('Microsoft.Compute/virtualMachines', parameters('VMName'))]"
                          ]
                        },
                        {
                          "type": "Microsoft.Network/networkInterfaces",
                          "apiVersion": "2023-09-01",
                          "name": "[[format('{0}-vNIC', parameters('VMName'))]",
                          "location": "[[parameters('Location')]",
                          "properties": {
                            "ipConfigurations": [
                              {
                                "name": "ipconfig1",
                                "properties": {
                                  "subnet": {
                                    "id": "[[parameters('SubnetID')]"
                                  }
                                }
                              }
                            ],
                            "enableAcceleratedNetworking": "[[parameters('AcceleratedNetworking')]"
                          },
                          "tags": "[[parameters('Tags')]"
                        },
                        {
                          "type": "Microsoft.Compute/virtualMachines",
                          "apiVersion": "2023-09-01",
                          "name": "[[parameters('VMName')]",
                          "location": "[[parameters('Location')]",
                          "zones": "[[variables('varAvailabilityZone')]",
                          "identity": "[[if(equals(parameters('DomainJoinObject').DomainType, 'EntraID'), createObject('type', 'SystemAssigned'), null())]",
                          "properties": {
                            "osProfile": {
                              "computerName": "[[parameters('VMName')]",
                              "adminUsername": "[[parameters('AdminUsername')]",
                              "adminPassword": "[[parameters('AdminPassword')]"
                            },
                            "hardwareProfile": {
                              "vmSize": "[[parameters('VMSize')]"
                            },
                            "storageProfile": {
                              "osDisk": {
                                "name": "[[format('{0}-OSDisk', parameters('VMName'))]",
                                "createOption": "FromImage",
                                "deleteOption": "Delete",
                                "managedDisk": {
                                  "storageAccountType": "[[parameters('DiskType')]"
                                }
                              },
                              "ImageReference": "[[parameters('ImageReference')]"
                            },
                            "securityProfile": "[[parameters('SecurityProfile')]",
                            "diagnosticsProfile": {
                              "bootDiagnostics": {
                                "enabled": true
                              }
                            },
                            "networkProfile": {
                              "networkInterfaces": [
                                {
                                  "id": "[[resourceId('Microsoft.Network/networkInterfaces', format('{0}-vNIC', parameters('VMName')))]",
                                  "properties": {
                                    "deleteOption": "Delete"
                                  }
                                }
                              ]
                            },
                            "licenseType": "Windows_Client"
                          },
                          "tags": "[[parameters('Tags')]",
                          "dependsOn": [
                            "[[resourceId('Microsoft.Network/networkInterfaces', format('{0}-vNIC', parameters('VMName')))]"
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/templateSpecs/versions",
              "apiVersion": "2022-02-01",
              "name": "[format('{0}/{1}', parameters('Name'), 'deploymentTemplateSpecVersion')]",
              "location": "[parameters('Location')]",
              "properties": {
                "mainTemplate": "[variables('$fxv#0')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', parameters('Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/templateSpecs",
              "apiVersion": "2022-02-01",
              "name": "[parameters('Name')]",
              "location": "[parameters('Location')]",
              "properties": {
                "description": "Template Spec for deploying VMs through the AVD Replacement Plan",
                "displayName": "AVD Replacement Plan Session Host Template"
              }
            }
          ],
          "outputs": {
            "TemplateSpecResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Resources/templateSpecs', parameters('Name'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[not(parameters('UseUserAssignedManagedIdentity'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RBAC-vdiVMContributor-{0}', parameters('TimeStamp'))]",
      "subscriptionId": "[subscription().subscriptionId]",
      "location": "[resourceGroup().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrinicpalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployFunctionApp'), '2022-09-01').outputs.functionAppPrincipalId.value]"
          },
          "RoleDefinitionId": {
            "value": "a959dbd1-f747-45e3-8ba6-dd80f235f97c"
          },
          "Scope": {
            "value": "[subscription().id]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.45.22436",
              "templateHash": "15455176785742187947"
            }
          },
          "parameters": {
            "PrinicpalId": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            },
            "Scope": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('PrinicpalId'), parameters('RoleDefinitionId'), parameters('Scope'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                "principalId": "[parameters('PrinicpalId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deployFunctionApp')]"
      ]
    },
    {
      "condition": "[not(parameters('UseUserAssignedManagedIdentity'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RBAC-TemplateSpecReader-{0}', parameters('TimeStamp'))]",
      "subscriptionId": "[subscription().subscriptionId]",
      "location": "[resourceGroup().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrinicpalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployFunctionApp'), '2022-09-01').outputs.functionAppPrincipalId.value]"
          },
          "RoleDefinitionId": {
            "value": "392ae280-861d-42bd-9ea5-08ee6d83b80e"
          },
          "Scope": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deployStandardSessionHostTemplate'), '2022-09-01').outputs.TemplateSpecResourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.45.22436",
              "templateHash": "15455176785742187947"
            }
          },
          "parameters": {
            "PrinicpalId": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            },
            "Scope": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('PrinicpalId'), parameters('RoleDefinitionId'), parameters('Scope'))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                "principalId": "[parameters('PrinicpalId')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deployFunctionApp')]",
        "[resourceId('Microsoft.Resources/deployments', 'deployStandardSessionHostTemplate')]"
      ]
    }
  ]
}