{
    "$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json#",
    "view": {
        "kind": "Form",
        "properties": {
            "title": "Azure Virtual Desktop - Session Host Replacer Deployment",
            "steps": [
                {
                    "name": "basics",
                    "label": "Basics",
                    "elements": [
                        {
                            "name": "scope",
                            "type": "Microsoft.Common.ResourceScope",
                            "location": {
                                "resourceTypes": [
                                    "Microsoft.Compute/virtualMachines",
                                    "Microsoft.Web/serverfarms",
                                    "Microsoft.Web/sites"
                                ]
                            }
                        },
                        {
                            "name": "hostPool",
                            "type": "Microsoft.Solutions.ResourceSelector",
                            "label": "Host pool",
                            "resourceType": "Microsoft.DesktopVirtualization/HostPools",
                            "constraints": {
                                "required": true
                            },
                            "options": {
                                "filter": {}
                            }
                        },
                        {
                            "name": "resourceGroupsApi",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "request": {
                                "method": "GET",
                                "path": "[concat(steps('basics').scope.subscription.id, '/resourcegroups?api-version=2021-04-01')]"
                            }
                        },
                        {
                            "name": "sessionHostsResourceGroupName",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Resource group for the AVD session hosts",
                            "constraints": {
                                "required": true,
                                "allowedValues": "[map(steps('basics').resourceGroupsApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]"
                            }
                        },
                        {
                            "name": "userAssignedIdentity",
                            "type": "Microsoft.Solutions.ResourceSelector",
                            "visible": true,
                            "label": "User assigned identity",
                            "resourceType": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "constraints": {
                                "required": true
                            },
                            "options": {
                                "filter": {
                                    "subscription": "onBasics",
                                    "location": "onBasics"
                                }
                            }
                        },
                        {
                            "name": "userAssignedIdentityInfoBox",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": true,
                            "options": {
                                "icon": "Info",
                                "text": "A User Assigned Identity must already exist with the proper permissions in Azure and Entra. Follow the link for more info.",
                                "uri": "https://github.com/Azure/AVDReplacementPlans/blob/v0.2.8-beta.10/docs/Permissions.md"
                            }
                        },
                        {
                            "name": "zipFileUrl",
                            "type": "Microsoft.Common.TextBox",
                            "label": "ZIP File URL",
                            "defaultValue": "",
                            "toolTip": "Input the URL to the ZIP file. It is necessary for customers adopting zero-trust principles to download, checksum validate, scan, and host the file in Azure Blobs.",
                            "placeholder": "",
                            "multiLine": false,
                            "constraints": {
                                "required": true,
                                "validations": [
                                    {
                                        "isValid": "[startsWith(steps('basics').zipFileUrl, 'https://')]",
                                        "message": "The URL must start with 'https://'."
                                    },
                                    {
                                        "isValid": "[endsWith(steps('basics').zipFileUrl, '.zip')]",
                                        "message": "The URL must end with '.zip'."
                                    }
                                ]
                            },
                            "visible": true
                        },
                        {
                            "name": "versionInfo",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": true,
                            "options": {
                                "text": "AVD session host replacer Portal UI Version: v0.2.8-beta.10",
                                "link": {
                                    "label": "GitHub Repository",
                                    "uri": "https://github.com/Azure/AVDSessionHostReplacer"
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "templateStep",
                    "label": "Template",
                    "elements": [
                        {
                            "name": "dodTenant",
                            "type": "Microsoft.Common.CheckBox",
                            "label": "Is this a DoD Entra ID tenant?",
                            "constraints": {
                                "required": false
                            },
                            "visible": "[or(contains(steps('basics').scope.location.name, 'usdod'), contains(steps('basics').scope.location.name, 'usgov'))]"
                        },
                        {
                            "name": "templateSpec",
                            "type": "Microsoft.Solutions.ResourceSelector",
                            "label": "Template Spec",
                            "resourceType": "Microsoft.Resources/templateSpecs",
                            "options": {
                                "filter": {
                                    "subscription": "onBasics",
                                    "location": "onBasics"
                                }
                            }
                        },
                        {
                            "name": "templateSpecVersionsApi",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "condition": "[not(empty(steps('templateStep').templateSpec))]",
                            "request": {
                                "method": "GET",
                                "path": "[concat(steps('basics').scope.subscription.id, '/resourceGroups/', first(skip(split(steps('templateStep').templateSpec.id, '/'), 4)), '/providers/Microsoft.Resources/templateSpecs/', steps('templateStep').templateSpec.name, '/versions?api-version=2021-05-01')]"
                            }
                        },
                        {
                            "name": "templateSpecVersionResourceId",
                            "type": "Microsoft.Common.DropDown",
                            "label": "Template Spec version",
                            "constraints": {
                                "required": true,
                                "allowedValues": "[map(steps('templateStep').templateSpecVersionsApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]"
                            }
                        },
                        {
                            "name": "templateParametersUri",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Template parameters URI",
                            "defaultValue": "",
                            "toolTip": "Input the URL to the parameters file. It is necessary for customers adopting zero-trust principles to download, checksum validate, scan, and host the file in Azure Blobs.",
                            "placeholder": "",
                            "multiLine": false,
                            "constraints": {
                                "required": true,
                                "validations": [
                                    {
                                        "isValid": "[startsWith(steps('templateStep').deploymentParametersUri, 'https://')]",
                                        "message": "The URL must start with 'https://'."
                                    },
                                    {
                                        "isValid": "[endsWith(steps('templateStep').deploymentParametersUri, '.json')]",
                                        "message": "The URL must end with '.json'."
                                    }
                                ]
                            },
                            "visible": true
                        }
                    ]
                },
                {
                    "name": "networkingStep",
                    "label": "Networking",
                    "elements": [
                        {
                            "name": "functionAppSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Function App",
                            "elements": [
                                {
                                    "name": "virtualNetworkSelector",
                                    "type": "Microsoft.Solutions.ResourceSelector",
                                    "label": "Virtual Network",
                                    "resourceType": "Microsoft.Network/virtualNetworks",
                                    "options": {
                                        "filter": {
                                            "subscription": "onBasics",
                                            "location": "onBasics"
                                        }
                                    }
                                },
                                {
                                    "name": "subnetsApi",
                                    "type": "Microsoft.Solutions.ArmApiControl",
                                    "condition": "[not(empty(steps('networkingStep').functionAppSection.virtualNetworkSelector))]",
                                    "request": {
                                        "method": "GET",
                                        "path": "[concat(steps('basics').scope.subscription.id, '/resourceGroups/', first(skip(split(steps('networkingStep').functionAppSection.virtualNetworkSelector.id, '/'), 4)), '/providers/Microsoft.Network/virtualNetworks/', steps('networkingStep').functionAppSection.virtualNetworkSelector.name, '/subnets?api-version=2024-01-01')]"
                                    }
                                },
                                {
                                    "name": "subnetResourceId",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Subnet for inbound private endpoint",
                                    "multiLine": true,
                                    "toolTip": "Select the subnet for the inbound private endpoint on the function app.",
                                    "constraints": {
                                        "allowedValues": "[map(steps('networkingStep').functionAppSection.subnetsApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                },
                                {
                                    "name": "delegatedSubnetResourceId",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Delegated subnet for outbound VNET integration",
                                    "multiLine": true,
                                    "toolTip": "Select the delegated subnet for the outbound VNET integration on the function app.",
                                    "constraints": {
                                        "allowedValues": "[map(steps('networkingStep').functionAppSection.subnetsApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                }
                            ]
                        },
                        {
                            "name": "privateDnsZonesSection",
                            "type": "Microsoft.Common.Section",
                            "label": "Private DNS Zones",
                            "elements": [
                                {
                                    "name": "subscriptionsApi",
                                    "type": "Microsoft.Solutions.ArmApiControl",
                                    "request": {
                                        "method": "GET",
                                        "path": "subscriptions?api-version=2022-12-01"
                                    }
                                },
                                {
                                    "name": "subscription",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Subscription",
                                    "multiLine": true,
                                    "toolTip": "Select the subscription for the existing Private DNS Zones.",
                                    "constraints": {
                                        "allowedValues": "[map(steps('networkingStep').privateDnsZonesSection.subscriptionsApi.value, (item) => parse(concat('{\"label\":\"', item.displayName, '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                },
                                {
                                    "name": "privateDnsZonesApi",
                                    "type": "Microsoft.Solutions.ArmApiControl",
                                    "request": {
                                        "method": "GET",
                                        "path": "[concat(steps('networkingStep').privateDnsZonesSection.subscription, '/providers/Microsoft.Network/privateDnsZones?api-version=2018-09-01')]"
                                    }
                                },
                                {
                                    "name": "azureBlobs",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Azure Blobs",
                                    "multiLine": true,
                                    "toolTip": "Select the existing Private DNS Zone for Azure Blobs.",
                                    "constraints": {
                                        "allowedValues": "[map(filter(steps('networkingStep').privateDnsZonesSection.privateDnsZonesApi.value, (item) => startsWith(item.name, 'privatelink.blob.')), (item) => parse(concat('{\"label\":\"', item.name, '\",\"description\":\"Resource group: ', first(skip(split(item.id, '/'), 4)), '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                },
                                {
                                    "name": "azureFiles",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Azure Files",
                                    "multiLine": true,
                                    "toolTip": "Select the existing Private DNS Zone for Azure Files.",
                                    "constraints": {
                                        "allowedValues": "[map(filter(steps('networkingStep').privateDnsZonesSection.privateDnsZonesApi.value, (item) => startsWith(item.name, 'privatelink.file.')), (item) => parse(concat('{\"label\":\"', item.name, '\",\"description\":\"<b>Resource group:</b> ', first(skip(split(item.id, '/'), 4)), '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                },
                                {
                                    "name": "azureQueues",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Azure Queues",
                                    "multiLine": true,
                                    "toolTip": "Select the existing Private DNS Zone for Azure Queues.",
                                    "constraints": {
                                        "allowedValues": "[map(filter(steps('networkingStep').privateDnsZonesSection.privateDnsZonesApi.value, (item) => startsWith(item.name, 'privatelink.queue.')), (item) => parse(concat('{\"label\":\"', item.name, '\",\"description\":\"<b>Resource group:</b> ', first(skip(split(item.id, '/'), 4)), '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                },
                                {
                                    "name": "azureTables",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Azure Tables",
                                    "multiLine": true,
                                    "toolTip": "Select the existing Private DNS Zone for Azure Tables.",
                                    "constraints": {
                                        "allowedValues": "[map(filter(steps('networkingStep').privateDnsZonesSection.privateDnsZonesApi.value, (item) => startsWith(item.name, 'privatelink.table.')), (item) => parse(concat('{\"label\":\"', item.name, '\",\"description\":\"<b>Resource group:</b> ', first(skip(split(item.id, '/'), 4)), '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                },
                                {
                                    "name": "functionApp",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Function App",
                                    "multiLine": true,
                                    "toolTip": "Select the existing Private DNS Zone for Azure Function Apps.",
                                    "constraints": {
                                        "allowedValues": "[map(filter(steps('networkingStep').privateDnsZonesSection.privateDnsZonesApi.value, (item) => startsWith(item.name, 'privatelink.azurewebsites.')), (item) => parse(concat('{\"label\":\"', item.name, '\",\"description\":\"<b>Resource group:</b> ', first(skip(split(item.id, '/'), 4)), '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                },
                                {
                                    "name": "functionAppScm",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Function App SCM",
                                    "multiLine": true,
                                    "toolTip": "Select the existing Private DNS Zone for the Azure Function App SCM.",
                                    "constraints": {
                                        "allowedValues": "[map(filter(steps('networkingStep').privateDnsZonesSection.privateDnsZonesApi.value, (item) => startsWith(item.name, 'scm.privatelink.azurewebsites.')), (item) => parse(concat('{\"label\":\"', item.name, '\",\"description\":\"<b>Resource group:</b> ', first(skip(split(item.id, '/'), 4)), '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                },
                                {
                                    "name": "vault",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Key Vault",
                                    "multiLine": true,
                                    "toolTip": "Select the existing Private DNS Zone for Key Vaults.",
                                    "constraints": {
                                        "allowedValues": "[map(filter(steps('networkingStep').privateDnsZonesSection.privateDnsZonesApi.value, (item) => startsWith(item.name, 'privatelink.vaultcore.')), (item) => parse(concat('{\"label\":\"', item.name, '\",\"description\":\"<b>Resource group:</b> ', first(skip(split(item.id, '/'), 4)), '\",\"value\":\"', item.id, '\"}')))]",
                                        "required": true
                                    },
                                    "visible": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "optionalParametersStep",
                    "label": "Optional Parameters",
                    "elements": [
                        {
                            "name": "tagIncludeInAutomation",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Include in Automation Tag Name",
                            "toolTip": "The name of the tag to use to determine if an existing session host should be included in the automation. After deployment, if the tag is present and set to 'true', the session host will be included. If the tag is not present or set to 'false', the session host will be excluded.",
                            "defaultValue": "IncludeInAutoReplace",
                            "constraints": {
                                "required": false
                            }
                        },
                        {
                            "name": "tagDeployTimestamp",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Deploy Timestamp Tag Name",
                            "toolTip": "The name of the tag to use to determine when the session host was deployed. This is updated by the session host replacer function on new session hosts. After deployment, you can edit the value of this tag to force replace a VM.",
                            "defaultValue": "AutoReplaceDeployTimestamp",
                            "constraints": {
                                "required": false
                            }
                        },
                        {
                            "name": "tagPendingDrainTimestamp",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Pending Drain Timestamp Tag Name",
                            "toolTip": "The name of the tag to use to determine when the session host was marked for drain. This is updated by the session host replacer function on hosts pending deletion.",
                            "defaultValue": "AutoReplacePendingDrainTimestamp",
                            "constraints": {
                                "required": false
                            }
                        },
                        {
                            "name": "tagScalingPlanExclusionTag",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Scaling Plan Exclusion Tag Name",
                            "toolTip": "The name of the tag session host replacer will set to exclude a session host from scaling plans actions.",
                            "defaultValue": "ScalingPlanExclusion",
                            "constraints": {
                                "required": false
                            }
                        },
                        {
                            "name": "targetVMAgeDays",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Target VM Age (Days)",
                            "toolTip": "The maximum age of a VM in days before it is replaced. This is compared to the value of the Deploy Timestamp Tag.",
                            "defaultValue": 45,
                            "constraints": {
                                "required": false
                            }
                        },
                        {
                            "name": "drainGracePeriodHours",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Drain Grace Period (Hours)",
                            "toolTip": "The number of hours to wait after marking a VM for drain before deleting it. This is to allow users to finish their sessions before the VM is deleted.",
                            "defaultValue": 24,
                            "constraints": {
                                "required": false
                            }
                        },
                        {
                            "name": "fixSessionHostTags",
                            "type": "Microsoft.Common.CheckBox",
                            "label": "Fix Existing Session Host Tags",
                            "toolTip": "If enabled, the session host replacer will fix the tags on existing session hosts or if tags are mistakenly deleted. The tag values will NOT allow deletion of existing session hosts and must be changed post deployment. This is useful if you are deploying a new session host replacer to an existing host pool.",
                            "defaultValue": true,
                            "constraints": {
                                "required": false
                            }
                        },
                        {
                            "name": "shrDeploymentPrefix",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Deployment Prefix",
                            "toolTip": "The prefix of the deployment created in the session hosts resource group when replacement VMs are deploying. This is used to track running and failed deployments.",
                            "defaultValue": "AVDSessionHostReplacer",
                            "constraints": {
                                "required": false
                            }
                        },
                        {
                            "name": "replaceSessionHostOnNewImageVersion",
                            "type": "Microsoft.Common.CheckBox",
                            "label": "Replace Session Hosts On New Image Version",
                            "toolTip": "(Recommended) If enabled, the session host replacer will replace session hosts when a new image version is available. This works for both marketplace and custom images. If disabled, the session host replacer will only replace session hosts when the VM age is greater than the target VM age.",
                            "defaultValue": true,
                            "constraints": {
                                "required": false
                            }
                        },
                        {
                            "name": "replaceSessionHostOnNewImageVersionDelayDays",
                            "type": "Microsoft.Common.TextBox",
                            "visible": "[steps('optionalParametersStep').replaceSessionHostOnNewImageVersion]",
                            "label": "Replace on New Image Version Delay (Days)",
                            "toolTip": "The number of days to wait after a new image is available before replacing session hosts. This is to allow time for the image to be tested before replacing session hosts.",
                            "defaultValue": "0",
                            "constraints": {
                                "required": false
                            }
                        }
                    ]
                },
                {
                    "name": "monitoringStep",
                    "label": "Monitoring",
                    "elements": [
                        {
                            "name": "logAnalyticsWorkspace",
                            "type": "Microsoft.Solutions.ResourceSelector",
                            "label": "Log Analytics Workspace",
                            "resourceType": "Microsoft.OperationalInsights/workspaces",
                            "constraints": {
                                "required": true
                            },
                            "options": {
                                "filter": {}
                            },
                            "visible": true
                        },
                        {
                            "name": "privateLinkScope",
                            "type": "Microsoft.Solutions.ResourceSelector",
                            "label": "Azure Monitor Private Link Scope",
                            "resourceType": "Microsoft.Insights/privateLinkScopes",
                            "constraints": {
                                "required": true
                            },
                            "options": {
                                "filter": {}
                            },
                            "visible": true
                        }
                    ]
                },
                {
                    "name": "namingStep",
                    "label": "Naming",
                    "elements": [
                        {
                            "name": "applicationInsightsName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Application Insights",
                            "toolTip": "Input the name for the application insights resource.",
                            "placeholder": "Example: appi-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^(?!.*[\\.]$)[a-z0-9A-Z\\.()_-]{1,255}$",
                                "validationMessage": "The resource name must contain between 1 to 255 characters inclusive. The name only allows alphanumeric characters, periods, underscores, hyphens and parenthesis and cannot end in a period."
                            }
                        },
                        {
                            "name": "appServicePlanName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "App Service Plan",
                            "toolTip": "Input the name for the app service plan resource.",
                            "placeholder": "Example: asp-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^[a-z0-9A-Z-]{1,60}$",
                                "validationMessage": "The resource name must contain between 1 to 60 characters inclusive. The name only allows alphanumeric characters and hyphens."
                            }
                        },
                        {
                            "name": "functionApp_checkNameAvailability",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "request": {
                                "method": "POST",
                                "path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Web/checknameavailability?api-version=2023-12-01')]",
                                "body": {
                                    "isFqdn": false,
                                    "name": "[steps('namingStep').functionAppName]",
                                    "type": "Microsoft.Web/sites"
                                }
                            }
                        },
                        {
                            "name": "functionApp_rePUT",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "request": {
                                "method": "GET",
                                "path": "[concat(steps('basics').scope.subscription.id, '/resourceGroups/', first(skip(split(steps('basics').userAssignedIdentity.id, '/'), 4)), '/providers/Microsoft.Web/sites/', steps('namingStep').functionAppName, '?api-version=2023-12-01')]",
                                "body": {}
                            }
                        },
                        {
                            "name": "functionAppName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Function App",
                            "toolTip": "Input the name for the function app resource.",
                            "placeholder": "Example: func-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "validations": [
                                    {
                                        "isValid": "[or(steps('namingStep').functionApp_checkNameAvailability.nameAvailable, equals(steps('namingStep').functionApp_checkNameAvailability.reason, 'AlreadyExists'))]",
                                        "message": "[steps('namingStep').functionApp_checkNameAvailability.message]"
                                    },
                                    {
                                        "isValid": "[or(steps('namingStep').functionApp_checkNameAvailability.nameAvailable, equals(steps('namingStep').functionApp_rePUT.id, concat(steps('basics').scope.subscription.id,'/resourceGroups/', first(skip(split(steps('basics').userAssignedIdentity.id, '/'), 4)), '/providers/Microsoft.Web/sites/',steps('namingStep').functionAppName)), not(equals(steps('namingStep').functionApp_checkNameAvailability.reason, 'AlreadyExists')))]",
                                        "message": "[steps('namingStep').functionApp_checkNameAvailability.message]"
                                    }
                                ]
                            }
                        },
                        {
                            "name": "functionAppNetworkInterfaceName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Function App Network Interface",
                            "toolTip": "Input the name for the network interface on the function app resource.",
                            "placeholder": "Example: nic-func-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
                                "validationMessage": "The resource name must contain between 1 to 80 characters inclusive. The name only allows alphanumerics, underscores, periods, and hyphens. The name must start with an alphanumeric and end with an alphanumeric or underscore."
                            }
                        },
                        {
                            "name": "functionAppPrivateEndpointName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Function App Private Endpoint",
                            "toolTip": "Input the name for the private endpoint on the function app resource.",
                            "placeholder": "Example: pep-func-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{1,62}[a-zA-Z0-9_])$",
                                "validationMessage": "The resource name must contain between 2 to 64 characters inclusive. The name only allows alphanumerics, underscores, periods, and hyphens. The name must start with an alphanumeric and end with an alphanumeric or underscore."
                            }
                        },
                        {
                            "name": "keyVault_checkNameAvailability",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "request": {
                                "method": "POST",
                                "path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.KeyVault/checkNameAvailability?api-version=2022-07-01')]",
                                "body": {
                                    "name": "[steps('namingStep').keyVaultName]",
                                    "type": "Microsoft.KeyVault/vaults"
                                }
                            }
                        },
                        {
                            "name": "keyVault_rePUT",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "request": {
                                "method": "GET",
                                "path": "[concat(steps('basics').scope.subscription.id, '/resourceGroups/', first(skip(split(steps('basics').userAssignedIdentity.id, '/'), 4)), '/providers/Microsoft.KeyVault/vaults/', steps('namingStep').keyVaultName, '?api-version=2022-07-01')]",
                                "body": {}
                            }
                        },
                        {
                            "name": "keyVaultName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Key vault",
                            "toolTip": "Name for the key vault. The name must be globally unique.",
                            "placeholder": "Example: kv-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "validations": [
                                    {
                                        "isValid": "[or(steps('namingStep').keyVault_checkNameAvailability.nameAvailable, equals(steps('namingStep').keyVault_checkNameAvailability.reason, 'AlreadyExists'))]",
                                        "message": "[steps('namingStep').keyVault_checkNameAvailability.message]"
                                    },
                                    {
                                        "isValid": "[or(steps('namingStep').keyVault_checkNameAvailability.nameAvailable, equals(steps('namingStep').keyVault_rePUT.id, concat(steps('basics').scope.subscription.id,'/resourceGroups/', first(skip(split(steps('basics').userAssignedIdentity.id, '/'), 4)), '/providers/Microsoft.KeyVault/vaults/', steps('namingStep').keyVaultName)), not(equals(steps('namingStep').keyVault_checkNameAvailability.reason, 'AlreadyExists')))]",
                                        "message": "[steps('namingStep').keyVault_checkNameAvailability.message]"
                                    }
                                ]
                            }
                        },
                        {
                            "name": "keyVaultNetworkInterfaceName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Key Vault Network Interface",
                            "toolTip": "Input the name for the network interface on the key vault resource.",
                            "placeholder": "Example: nic-kv-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
                                "validationMessage": "The resource name must contain between 1 to 80 characters inclusive. The name only allows alphanumerics, underscores, periods, and hyphens. The name must start with an alphanumeric and end with an alphanumeric or underscore."
                            }
                        },
                        {
                            "name": "keyVaultPrivateEndpointName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Key Vault Private Endpoint",
                            "toolTip": "Input the name for the private endpoint on the key vault resource.",
                            "placeholder": "Example: pep-kv-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "validations": [
                                    {
                                        "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{1,62}[a-zA-Z0-9_])$",
                                        "message": "The resource name must contain between 2 to 64 characters inclusive. The name only allows alphanumerics, underscores, periods, and hyphens. The name must start with an alphanumeric and end with an alphanumeric or underscore."
                                    }
                                ]
                            }
                        },
                        {
                            "name": "storageAccount_checkNameAvailability",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "request": {
                                "method": "POST",
                                "path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Storage/checkNameAvailability?api-version=2016-01-01')]",
                                "body": {
                                    "name": "[steps('namingStep').storageAccountName]",
                                    "type": "Microsoft.Storage/storageAccounts"
                                }
                            }
                        },
                        {
                            "name": "storageAccount_rePUT",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "request": {
                                "method": "GET",
                                "path": "[concat(steps('basics').scope.subscription.id, '/resourceGroups/', first(skip(split(steps('basics').userAssignedIdentity.id, '/'), 4)), '/providers/Microsoft.Storage/storageAccounts/', steps('namingStep').storageAccountName, '?api-version=2016-01-01')]",
                                "body": {}
                            }
                        },
                        {
                            "name": "storageAccountName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Storage Account Name",
                            "defaultValue": "",
                            "toolTip": "The name of the storage account to store you migration data. The value must be 24 characters or less. Special characters are not allowed. The value must be in lowercase.",
                            "constraints": {
                                "required": true,
                                "validations": [
                                    {
                                        "isValid": "[or(steps('namingStep').storageAccount_checkNameAvailability.nameAvailable, equals(steps('namingStep').storageAccount_checkNameAvailability.reason, 'AlreadyExists'))]",
                                        "message": "[steps('namingStep').storageAccount_checkNameAvailability.message]"
                                    },
                                    {
                                        "isValid": "[or(steps('namingStep').storageAccount_checkNameAvailability.nameAvailable, equals(steps('namingStep').storageAccount_rePUT.id, concat(steps('basics').scope.subscription.id,'/resourceGroups/', first(skip(split(steps('basics').userAssignedIdentity.id, '/'), 4)), '/providers/Microsoft.Storage/storageAccounts/',steps('namingStep').storageAccountName)), not(equals(steps('namingStep').storageAccount_checkNameAvailability.reason, 'AlreadyExists')))]",
                                        "message": "[steps('namingStep').storageAccount_checkNameAvailability.message]"
                                    }
                                ]
                            },
                            "visible": true
                        },
                        {
                            "name": "storageAccountDiagnosticSettingName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Storage Account Diagnostic Setting",
                            "toolTip": "Input the name for the diagnostic setting on the storage account resource.",
                            "placeholder": "Example: diag-st-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^[^<>*%&:\\?+/]{1,260}$",
                                "validationMessage": "The resource name must contain between 1 to 260 characters inclusive. The name must not contain the following characters: <, >, *, %, :, \\, ?, +, and /."
                            }
                        },
                        {
                            "name": "storageAccountNetworkInterfaceName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Storage Account Network Interface",
                            "toolTip": "Input the name for the network interface on the storage account resource.",
                            "placeholder": "Example: nic-st-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{0,78}[a-zA-Z0-9_])$",
                                "validationMessage": "The resource name must contain between 1 to 80 characters inclusive. The name only allows alphanumerics, underscores, periods, and hyphens. The name must start with an alphanumeric and end with an alphanumeric or underscore."
                            }
                        },
                        {
                            "name": "storageAccountPrivateEndpointName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Storage Account Private Endpoint",
                            "toolTip": "Input the name for the private endpoint on the storage account resource.",
                            "placeholder": "Example: pep-st-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9_\\.-]{1,62}[a-zA-Z0-9_])$",
                                "validationMessage": "The resource name must contain between 2 to 64 characters inclusive. The name only allows alphanumerics, underscores, periods, and hyphens. The name must start with an alphanumeric and end with an alphanumeric or underscore."
                            }
                        },
                        {
                            "name": "templateSpecName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "Template Spec",
                            "toolTip": "Input the name for the template spec resource.",
                            "placeholder": "Example: ts-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^[a-zA-Z0-9_\\.()-]{1,90}$",
                                "validationMessage": "The resource name must contain between 1 to 90 characters inclusive. The name only allows alphanumeric characters, periods, underscores, hyphens and parenthesis."
                            }
                        },
                        {
                            "name": "userAssignedIdentityName",
                            "type": "Microsoft.Common.TextBox",
                            "label": "User assigned identity",
                            "toolTip": "Input the name for the user assigned identity resource.",
                            "placeholder": "Example: id-shr-prod-use2",
                            "constraints": {
                                "required": true,
                                "regex": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,127}$",
                                "validationMessage": "The resource name must contain between 3 to 128 characters inclusive. The name only allows alphanumeric characters, underscores, and hyphens. The name must start with a letter or number."
                            }
                        }
                    ]
                },
                {
                    "name": "tagsStep",
                    "label": "Tags",
                    "elements": [
                        {
                            "name": "tags",
                            "type": "Microsoft.Common.TagsByResource",
                            "resources": [
                                "Microsoft.KeyVault/vaults",
                                "Microsoft.ManagedIdentity/userAssignedIdentities",
                                "Microsoft.Network/networkInterfaces",
                                "Microsoft.Network/privateEndpoints",
                                "Microsoft.OperationalInsights/workspaces",
                                "Microsoft.Storage/storageAccounts"
                            ]
                        }
                    ]
                }
            ]
        },
        "outputs": {
            "parameters": {
                "applicationInsightsName": "[steps('namingStep').applicationInsightsName]",
                "appServicePlanName": "[steps('namingStep').appServicePlanName]",
                "azureBlobsPrivateDnsZoneResourceId": "[steps('networkingStep').privateDnsZonesSection.azureBlobs]",
                "azureFilesPrivateDnsZoneResourceId": "[steps('networkingStep').privateDnsZonesSection.azureFiles]",
                "azureQueuesPrivateDnsZoneResourceId": "[steps('networkingStep').privateDnsZonesSection.azureQueues]",
                "azureTablesPrivateDnsZoneResourceId": "[steps('networkingStep').privateDnsZonesSection.azureTables]",
                "delegatedSubnetResourceId": "[steps('networkingStep').functionAppSection.delegatedSubnetResourceId]",
                "drainGracePeriodHours": "[steps('optionalParametersStep').drainGracePeriodHours]",
                "entraIdEnvironmentName": "[if(and(or(contains(steps('basics').scope.location.name, 'usdod'), contains(steps('basics').scope.location.name, 'usgov')), steps('templateStep').dodTenant), 'USGovDoD',  if(or(contains(steps('basics').scope.location.name, 'usdod'), contains(steps('basics').scope.location.name, 'usgov')), 'USGov', if(contains(steps('basics').scope.location.name, 'china'), 'China', 'Global')))]",
                "fixSessionHostTags": "[steps('optionalParametersStep').fixSessionHostTags]",
                "functionAppName": "[steps('namingStep').functionAppName]",
                "functionAppNetworkInterfaceName": "[steps('namingStep').functionAppNetworkInterfaceName]",
                "functionAppPrivateDnsZoneResourceId": "[steps('networkingStep').privateDnsZonesSection.functionApp]",
                "functionAppPrivateEndpointName": "[steps('namingStep').functionAppPrivateEndpointName]",
                "functionAppScmPrivateDnsZoneResourceId": "[steps('networkingStep').privateDnsZonesSection.functionAppScm]",
                "functionAppZipUrl": "[steps('basics').zipFileUrl]",
                "hostPoolResourceId": "[steps('basics').hostPool.id]",
                "keyVaultName": "[steps('namingStep').keyVaultName]",
                "keyVaultNetworkInterfaceName": "[steps('namingStep').keyVaultNetworkInterfaceName]",
                "keyVaultPrivateDnsZoneResourceId": "[steps('networkingStep').privateDnsZonesSection.vault]",
                "keyVaultPrivateEndpointName": "[steps('namingStep').keyVaultPrivateEndpointName]",
                "logAnalyticsWorkspaceResourceId": "[steps('monitoringStep').logAnalyticsWorkspace.id]",
                "privateLinkScopeResourceId": "[steps('monitoringStep').privateLinkScope.id]",
                "replaceSessionHostOnNewImageVersion": "[steps('optionalParametersStep').replaceSessionHostOnNewImageVersion]",
                "replaceSessionHostOnNewImageVersionDelayDays": "[steps('optionalParametersStep').replaceSessionHostOnNewImageVersionDelayDays]",
                "sessionHostsResourceGroupName": "[steps('basics').sessionHostsResourceGroupName]",
                "shrDeploymentPrefix": "[steps('optionalParametersStep').shrDeploymentPrefix]",
                "storageAccountDiagnosticSettingName": "[steps('namingStep').storageAccountDiagnosticSettingName]",
                "storageAccountName": "[steps('namingStep').storageAccountName]",
                "storageAccountNetworkInterfaceName": "[steps('namingStep').storageAccountNetworkInterfaceName]",
                "storageAccountPrivateEndpointName": "[steps('namingStep').storageAccountPrivateEndpointName]",
                "subnetResourceId": "[steps('networkingStep').functionAppSection.subnetResourceId]",
                "tagDeployTimestamp": "[steps('optionalParametersStep').tagDeployTimestamp]",
                "tagIncludeInAutomation": "[steps('optionalParametersStep').tagIncludeInAutomation]",
                "tagPendingDrainTimestamp": "[steps('optionalParametersStep').tagPendingDrainTimestamp]",
                "tags": "[steps('tagsStep').tags]",
                "tagScalingPlanExclusionTag": "[steps('optionalParametersStep').tagScalingPlanExclusionTag]",
                "targetVMAgeDays": "[steps('optionalParametersStep').targetVMAgeDays]",
                "templateParametersUri": "[steps('templateStep').templateParametersUri]",
                "templateSpecVersionResourceId": "[steps('templateStep').templateSpecVersionResourceId]",
                "userAssignedIdentityName": "[steps('namingStep').userAssignedIdentityName]",
                "userAssignedIdentityResourceId": "[steps('basics').userAssignedIdentity.id]"
            },
            "kind": "Subscription",
            "location": "[steps('basics').scope.location.name]",
            "subscriptionId": "[steps('basics').scope.subscription.id]"
        }
    }
}